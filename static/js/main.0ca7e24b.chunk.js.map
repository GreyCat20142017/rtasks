{"version":3,"sources":["serviceWorker.js","appfirebase/UserContext.js","appfirebase/firebasefunctions.js","constants.js","functions.js","common/NotFound.jsx","common/loader/Loader.jsx","common/dropdown/DropDownHook.jsx","appchart/chartconstants.js","appchart/chartfunctions.js","appchart/chart/SimpleChart.jsx","common/simpletable/ArrayRowCells.jsx","common/simpletable/DraggableArrayRow.jsx","common/simpletable/SimpleArrayRow.jsx","common/simpletable/SimpleTable.jsx","common/details/Details.jsx","appchart/form/GitUserForm.jsx","appchart/AppChart.jsx","apptable/tableconstants.js","apptable/table/Table.jsx","apptable/filter/Filter.jsx","apptable/AppTable.jsx","appmap/mapfunctions.js","appmap/mapconstants.js","appmap/MapYandex.jsx","appmap/Map2Gis.jsx","appmap/mapform/MapForm.jsx","appmap/AppMap.jsx","appmain/AppMain.jsx","appfirebase/AppFirebase.jsx","appfirebase/login/Login.jsx","appfirebase/logout/Logout.jsx","appfirebase/register/Register.jsx","appfirebase/profile/Profile.jsx","common/Disabled.jsx","errorboundary/ErrorBoundary.jsx","routes.js","common/UserMenu.jsx","AppSwitcher.jsx","App.js","config.js","index.js","common/loader/logo.svg"],"names":["Boolean","window","location","hostname","match","React","createContext","getUser","user","displayName","uid","email","getAuthUserProperty","property","KEYCODES","MAP_TYPES","DISABLED_COMPONENTS","TASKS","MAIN","title","component","comment","href","TABLE","CHART","MAP_YANDEX","additionalParam","MAP_2GIS","FIREBASE","TASKS_ORDER","Object","keys","map","key","filter","task","indexOf","url","origin","DATA_ROOT","APP_ROOT","CONTROL_BUTTON_TYPES","DELETE","icon","UP","DOWN","DND_TYPES","getButtonTypeClass","buttonType","getInlineSvg","name","width","height","fillColor","strokeColor","xmlns","viewBox","fill","stroke","d","version","id","NotFound","className","Loader","message","src","logo","witdh","alt","LinkDrop","link","css","clickHandler","linkCss","onClick","text","ButtonDrop","type","DropDown","data","togglerText","ariaInfo","dropdownSet","callback","routerLink","togglerCss","useState","isOpen","setIsOpen","toggleContainer","useRef","timeOutId","dropOpenedClass","links","Array","isArray","useEffect","document","addEventListener","onClickOutsideHandler","onKeyPress","removeEventListener","onButtonClickHandler","onRouterLinkClickHandler","evt","current","contains","target","keyCode","preventDefault","ref","onBlur","setTimeout","onFocus","clearTimeout","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","ind","GIT_URLS","PHPTEST","reposUrl","userUrl","TEST","CHART_COLORS","CHART_TYPES","BAR","PIE","DOUGHNUT","GIT_TYPES","GIT_LINK_PARTS","isDigit","str","getIsAcademy","includes","parseRepoInfo","repo","isAcademy","html_url","parsedName","academyId","project","intensiveNumber","splitted","split","length","join","first","rest","middle","slice","last","parseName","description","homepage","language","transformUserData","login","toLowerCase","reposCount","public_repos","profile","transformReposData","item","getTotals","content","totalField","totals","fieldName","forEach","getPreparedData","labels","label","getTotalsField","chart","SimpleChart","chartTitle","chartFooter","onLegendClick","hidden","chartType","setChartType","canvas","chartData","sourceData","colors","datasets","backgroundColor","borderColor","color","substring","lastIndexOf","borderWidth","options","scales","yAxes","ticks","beginAtZero","parseInt","transformToChartData","drawChart","operations","ctx","getContext","destroy","Chart","assign","ArrayRowCells","element","controls","rowInd","Fragment","control","colInd","Control","getControl","DraggableArrayRow","moveRow","dragRef","useDrop","accept","hover","monitor","drop","useDrag","end","drag","SimpleArrayRow","DetailsHeader","ArrayRows","details","draggableRows","ObjectRows","columns","SimpleTable","noHeader","Details","unsetDetails","onKeyDown","GitUserForm","onGitUserClick","inputValue","setInputValue","trim","value","pattern","placeholder","onChange","getPagesUrls","tmpUser","isGitData","pages","totalCount","totalPages","Math","ceil","i","repoUrl","push","AppChart","props","isLoading","setIsLoading","repos","setContent","wasError","setWasError","currentDetails","setCurrentDetails","onError","errorMessage","getData","canceled","fetch","then","response","json","userData","Promise","all","page","results","jointData","result","catch","error","role","aria-label","userName","something","fields","getDetailsFields","filterField","reduce","rv","field","totalDetails","uniqueIdCount","v","a","aboutId","DATA_URLS","SMALL","BIG","SORT_DIRECTIONS","SortIndicator","currentColumn","sortField","sortDirection","onDirectionChange","arrow","aria-hidden","TableRow","row","onRowClick","column","Table","onTableSort","noData","cellSpacing","pageCount","previousLabel","nextLabel","breakLabel","onPageChange","paginationPage","selected","forcePage","currentPage","containerClassName","pageClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Filter","onFilterApply","htmlFor","filterValue","chunk","itemObject","AppTable","setFilterValue","setCurrentPage","setSortField","setSortDirection","preparedData","basicReset","defaultSortField","orderBy","rowData","getPlacemarkTitle","coords","toFixed","DELIMITER","getHtmlIcon","DEFAULT_POINT","DEFAULT_POINTS","POINT_TEXT","GEO_REG_EXP","YANDEX_PLACEMARK_PRESETS","START_POINT","COMMON_POINT","MapYandex","setMap","geoCollection","setGeoCollection","points","onChangeMarkerCoords","ymaps","ready","mapa","Map","center","zoom","behaviors","disable","remove","geo","GeoObjectCollection","preset","strokeWidth","geodesic","geoObjects","add","onMarkerDragEnd","e","obj","get","placemarkCoords","fromGlobalPixels","converter","pageToGlobal","getZoom","removeAll","point","marker","GeoObject","geometry","coordinates","properties","iconContent","hintContent","draggable","isMarker","getYmapsPoint","events","polyline","getYMapsRoute","refreshMap","Map2Gis","DG","featureGroup","addTo","lat","_latlng","lng","eachLayer","layer","clearAllEventListeners","removeLayer","divIcon","html","on","weight","opacity","ControlButton","MapForm","routePoints","onAddPoint","onDeletePoint","onUp","onDown","setWasInput","required","backend","HTML5Backend","AppMap","mapType","mapInit","geoInit","setRoutePoints","showSidebar","setShowSidebar","delIndex","index","newPointCoords","getCenter","getCenterByMapType","sourceArr","arr","moved","shift","moveUp","pop","moveDown","dragIndex","hoverIndex","draggedPoint","update","$splice","newCoords","find","AppMain","AppFirebase","axios","kind","Login","setEmail","password","setPassword","authUser","useContext","UserContext","onSubmit","regData","firebase","auth","signInWithEmailAndPassword","autoComplete","Logout","signOut","Register","setName","updateCurrentProfile","currentUser","updateProfile","register","createUserWithEmailAndPassword","Profile","Disabled","disabled","ErrorBoundary","state","this","setState","children","Component","defaultProps","routes","UserMenu","getUserMenuItems","navigate","AppSwitcher","routeResult","useRoutes","entries","taskSearch","pathname","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","setUser","onAuthStateChanged","Provider","setBasepath","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0ca7e24b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport default  React.createContext(null);","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport const getUser = (user) => {\n    return user ? ({\n        displayName: user.displayName,\n        uid: user.uid,\n        email: user.email\n    }) : null;\n};\n\nexport const getCurrentUserInfo = () => getUser(firebase.auth().currentUser);\n\nexport const getAuthUserProperty = (user, property = 'displayName') => (\n    user ? user[property] : 'Гость'\n);","export const KEYCODES = {\n    ENTER: 13,\n    ESC: 27\n};\n\nexport const MAP_TYPES = {\n    YANDEX: 'YANDEX',\n    GIS: '2GIS'\n};\n\nexport const DISABLED_COMPONENTS = [MAP_TYPES.YANDEX];\n\nexport const TASKS = {\n    MAIN: {\n        title: 'главная',\n        component: null,\n        comment: 'Тренировка на котиках. React (hooks) - CRA, react-paginate, lodash, chart.js, MDB, API карт, React-DnD, Firebase, hookrouter',\n        href: '/'\n    },\n    TABLE: {\n        title: 'таблица с данными', component: 'AppTable',\n        comment: 'Получение данных, сортировка, фильтрация, пагинация, вывод детальной информации по строке таблицы.',\n        href: '/table'\n    },\n    CHART: {title: 'ChartJS', component: 'AppChart', comment: 'Диаграмма, вывод детальной информации. API GitHub, promise', href: '/chart'},\n    MAP_YANDEX: {title: 'карта Yandex', component: 'AppMap', comment: 'Карта c маршрутом. API Yandex-карт, React-DnD', additionalParam: MAP_TYPES.YANDEX,\n        href: '/mapyandex'},\n    MAP_2GIS: {title: 'карта 2Gis', component: 'AppMap', comment: 'Карта c маршрутом. API 2Gis, React-DnD', additionalParam: MAP_TYPES.GIS,\n        href: '/map2gis'},\n    FIREBASE: {title: 'Firebase', component: 'AppFirebase', comment: 'Firebase (регистрация, аутентификация, получение данных). Axios, async/await',\n        href: '/firebase'}\n};\n\nexport const TASKS_ORDER = [...Object.keys(TASKS).map(key => TASKS[key])].filter(\n    task => !(task.additionalParam) || (DISABLED_COMPONENTS.indexOf(task.additionalParam) === -1));;\n\nconst url = window.location.origin;\nexport const DATA_ROOT = (url.match(/github\\.io/gi)) ? '' : '';\nexport const APP_ROOT = ((url.match(/github\\.io/gi)) ? '/rtasks' : '');\n\nexport const CONTROL_BUTTON_TYPES = {\n    DELETE: {title: 'удалить', icon: '\\u{2718}'},\n    UP: {title: 'вверх', icon: '\\u{2B06}'},\n    DOWN: {title: 'вниз', icon: '\\u{2B07}'}\n};\n\nexport const DND_TYPES = {\n    ROW: 'ROW'\n};\n\nexport const MDB_COLOR='#59698d';","import React from 'react';\nimport {CONTROL_BUTTON_TYPES, TASKS} from './constants';\n\nexport const moveDown = (sourceArr, ind) => {\n    if (sourceArr.length <= 1) {\n        return sourceArr;\n    }\n    const arr = [...sourceArr];\n    if (ind !== arr.length - 1) {\n        [arr[ind], arr[ind + 1]] = [arr[ind + 1], arr[ind]];\n        return arr;\n    }\n    const moved = arr.pop();\n    return [moved, ...arr];\n};\n\nexport const moveUp = (sourceArr, ind) => {\n    if (sourceArr.length <= 1) {\n        return sourceArr;\n    }\n    const arr = [...sourceArr];\n    if (ind !== 0) {\n        [arr[ind], arr[ind - 1]] = [arr[ind - 1], arr[ind]];\n        return arr;\n    }\n    const moved = arr.shift();\n    return [...arr, moved];\n};\n\nexport const getButtonTypeClass = (buttonType) => (buttonType === CONTROL_BUTTON_TYPES.DELETE ? ' btn-primary ' : ' btn-mdb-color ');\n\nexport const getInlineSvg = (name, width = 20, height = 20, fillColor = 'white', strokeColor = 'white') => {\n    switch (name) {\n        case 'roger':\n            return (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 300 300\" width={width} height={height}\n                     fill={fillColor} stroke={strokeColor}>\n                    <g>\n                        <path\n                            d=\"M4.3 55C2.5 56.1 1 57.2 1 57.4c0 .2 2.9 1.4 6.4 2.6 23.4 7.8 36.6 32.2 39.8 73.8 1.7 21.8-.6 42.2-6.8 61.7-4.3 13.3-17.4 34.3-27.3 44-2.3 2.1-4.1 4.2-4.1 4.6 0 .4 2.6-.1 5.7-1.1 12.1-3.7 19-4.4 28.6-2.7C59 243 64 240.1 68.5 226c1.8-5.7 4.5-9.9 4.5-7 0 .8-.7 4.2-1.5 7.5s-1.4 7.1-1.5 8.5v2.4l1.6-2.2c2.3-3.4 3.4-2.7 3.4 2.2 0 2.5.5 4.8 1 5.1 2.7 1.7 23.3 4.5 32.5 4.5 11.2 0 27.3-2.6 40.6-6.4 4.6-1.4 20.4-7.4 35.1-13.5 37.3-15.3 49.4-18.8 69.3-19.7 12.6-.6 23.3.8 29.7 4.1 4 2 4.3 1.9 5.6-.7.9-1.9 1.1-1.3 1.1 3.8.1 5.3-.3 6.5-2.4 8.6-1.4 1.4-4 3.3-5.8 4.2l-3.2 1.7 4-.6c6.8-1 12.8-4.6 14.8-8.7 3.9-8 3-22-2-27.8-4.2-5.1-7.6-6.2-21.5-7.2-7-.4-14-1.4-15.5-2-2.6-1.1-2.2-1.2 4.9-1.9 4.2-.3 9.3-1.5 11.5-2.5 3.3-1.6 3.8-2.4 4.1-5.7.2-2.1-.6-8.7-1.7-14.7-3-15.5-5.1-32.2-5.1-40.6 0-7.2 0-7.2-3.5-9.3-4.3-2.5-4.4-3.6-.2-5.1 2.9-1 3-1.2 1.5-2.4-2.6-1.9-2.2-2.6 1.6-2.6h3.4l-.1-18.3c0-10 .2-19.1.4-20.2 1.1-5.2-27.8-7.8-45.1-4.2-4.7 1-15 4.1-23 6.8-34.8 12-40.8 13.8-50.8 14.8-12.6 1.3-38.3-.1-63.6-3.5-10.4-1.3-19.4-2.3-20-2.1-.7.2-1.1 4.7-1.1 13.3 0 8.2-.5 13.6-1.2 14.9-1 1.6-1.2.2-1.3-8.2 0-11.2-1.4-19.5-3.5-21.3-1.1-.9-1.2-.4-.8 2.8.3 2.4.1 4.2-.6 4.6-.6.4-1.1.2-1.1-.4 0-2.6-5.4-9.1-9.6-11.6-6-3.5-19.5-8-31.3-10.5-11.7-2.4-13.8-2.4-17.8.1zM199 87.5c1.6.8 3.5 2.4 4.3 3.5 1.4 2 1.4 2 5.8-.5 9-5.1 19.6-2.5 22 5.4 1.1 3.6 1 4.5-1.2 8.7-3.4 6.7-7.5 8.7-16.2 8-6.6-.5-7-.4-11.8 3l-4.9 3.6 3.5 4.1c4.4 5.1 7.9 12.4 9.5 19.9 1.6 7.3.2 15.2-3.8 21.1-1.5 2.3-3.1 4.7-3.5 5.4-.5.8.9 1.9 3.9 3.2 2.6 1.2 4.8 2.1 4.9 2.1.2 0 .6-1.1.9-2.4.3-1.3 2.2-3.8 4.1-5.5 2.9-2.5 4.5-3.1 8.1-3.1 3.9 0 5.1.5 7.9 3.3 3.1 3.1 5.5 8.8 5.5 13 0 7.7-10.6 13.1-19.4 9.7-2.5-.9-2.6-.8-2.6 2.8 0 6.7-5 11.3-10 9.2-4.4-1.8-6.4-8.9-4-14.5.6-1.6-.1-2.9-3.3-6.3-2.3-2.3-4.4-4.2-4.8-4.2-.4 0-2.5 1-4.8 2.3l-4 2.3 2.9 4.5c1.7 2.4 3 4.7 3 5.2 0 .8-4.1 2.6-8.1 3.4-2.5.5-2.8.1-4.4-4.6-.9-2.8-2.1-5.1-2.6-5.1-1.3 0-1.2 1 1.1 7.5 1.1 3.2 1.9 5.9 1.8 6-.6.5-9.8 2.5-11.2 2.5-1.2 0-1.6-1.5-1.8-6.7-.2-4.4-.7-6.8-1.6-7.1-1.1-.3-1.2 1.2-.6 7.8l.7 8.1-6.4-.7c-3.5-.4-6.6-.8-6.7-1-.2-.1 0-3.4.5-7.3.7-5.4.6-7.1-.3-7.1-.7 0-1.5 2.3-1.9 6.1-.7 5.6-.9 6-2.9 5.5-1.1-.3-3.8-.9-5.8-1.2-2.1-.4-3.8-.8-3.8-1.1 0-.2.7-2 1.5-4 .8-1.9 1.5-4.1 1.5-4.8 0-.7-3.3-2.4-7.2-3.8l-7.3-2.6-4.1 4-4.1 4 3.5 3.5c3.1 3.1 3.4 3.9 2.9 7.2-.8 4.7-5.5 9.2-9.8 9.2-4 0-7.9-3.9-7.9-7.9v-3l-3.5 1.5c-5.1 2.1-11.7 1.8-14.9-.7-5.7-4.5-6.9-10.4-3.6-16.9 5.1-9.9 19.3-12.6 24.6-4.5l1.5 2.4 3.5-2.1 3.4-2-3.3-3.8c-8.1-8.8-8.9-20.8-2.4-34.4 2.1-4.4 3.4-8.2 3-8.6-.4-.4-2.6-1.9-4.7-3.3l-3.9-2.6-1.8 2.3c-4 5.1-16 5.5-20.4.6-4.4-4.9-2.4-15.9 3.7-20.4 3.1-2.2 11-2.6 14.6-.7 1.8.9 2.1.7 3.1-2.1 2.3-6.6 7-8.6 11.9-5.2 3 2.1 3.1 8.8.1 12l-2.1 2.2 3.2 4.7 3.2 4.6 6.6-6.3c7.9-7.6 11.8-10.1 19.1-12.2 6.4-1.9 12-2 19.3-.5 5.9 1.3 16.3 5.7 20.7 8.8 1.6 1.2 3.1 2.1 3.4 2.1.3 0 1.2-1.9 2-4.3 1.4-4.2 1.4-4.4-1.4-7.5-2.1-2.4-2.9-4.3-2.9-7 0-4.2.6-5.4 3.5-7 2.7-1.5 4.1-1.5 7.5.3z\"/>\n                        <path\n                            d=\"M132.8 118c-7 3.8-15.5 17-16.4 25.8-.7 5.9 2.4 12.2 7.9 16.6 2.9 2.4 5 3.1 9.7 3.4 8 .6 14.1-2.3 18.2-8.7 2.8-4.3 2.9-5.1 2.6-12.8-.4-6.8-1-9.2-3.9-15-3.5-7-8.2-11.3-12.3-11.3-1.2.1-3.8 1-5.8 2zm16.7 19.3c3.5 5.5 2.2 14.7-2.4 16.2-6.6 2.1-10.8-10.8-5.4-16.7 2.2-2.5 5.9-2.3 7.8.5zM168.8 123.3c-4.6 4.3-4.8 17.5-.5 25.2 5.7 10.1 23.3 11.5 29.9 2.5 2.4-3.2 3.2-8.6 2.4-14.5-.6-3.4-1.6-5.4-4.3-8-7.3-7.1-22.4-9.9-27.5-5.2zm6 14.9c1.9 1.9 1.4 7.3-.7 9.2-1.8 1.7-2 1.7-4-.3-2.3-2.3-2.7-5.2-1.1-8.2 1.2-2.1 4-2.5 5.8-.7zM162.2 159.2c-1.9 1.9-1.4 9.5.8 13.8 1.8 3.5 2.5 4 5.4 4 1.9 0 4.4-.8 5.6-1.8 3.3-2.6 2.1-8-2.9-13.2-3.9-4.1-6.7-5-8.9-2.8zM154.6 163.2c-3.5 5.3-3.9 12.2-.8 11.6 3.3-.6 5.5-9.2 3.3-12.7-.7-1.1-1.2-.8-2.5 1.1z\"/>\n                    </g>\n                </svg>);\n        case 'rtasks':\n            return (\n                <svg version=\"1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={width} height={height}\n                     fill={fillColor} stroke={strokeColor}>\n                    <path d=\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"/>\n                </svg>\n            );\n        default:\n            return (<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"default\" viewBox=\"0 0 17 13\" width={width} height={height}\n                         fill={fillColor} stroke={fillColor}></svg>);\n    }\n};\n\nexport const taskSearch = (href) => {\n  const result = Object.entries(TASKS).find(task => task[1].href === href);\n  return Array.isArray(result)  ? result[0] : 'MAIN';\n};\n\nexport const getAClassName = (href) => (\n    'btn btn-sm ' + (href === window.location.pathname ? '' : ' btn-mdb-color ')\n);\n","import React, {Fragment} from 'react';\n\nimport {getInlineSvg} from '../functions';\nimport {MDB_COLOR} from '../constants';\n\nconst NotFound = () => (\n    <Fragment>\n            <h1 className=\"visually-hidden\">404</h1>\n            <div className=\"row\">\n                <section className=\"col-12 col-md-6 text-center py-2 mx-auto\">\n                    {getInlineSvg('roger', 120, 120, MDB_COLOR, MDB_COLOR)}\n                    <p className=\"h4-responsive\" title=\"Страница не найдена\">\n                        Ошибка 404. Запрошенная страница не найдена.\n                    </p>\n                </section>\n            </div>\n    </Fragment>\n);\n\nexport default NotFound;\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './loader.css';\n\nconst Loader = ({message = 'Данные загружаются...'}) => (\n     <div className='mx-auto'>\n        <img  className='loader' src={logo}  witdh='80' height='80' alt='logo' />\n        <small className='mdb-color-text'>{message}</small>\n    </div>\n);\n\nexport default Loader;","import React, {useState, useRef, useEffect} from 'react';\r\nimport {KEYCODES} from '../../constants';\r\n\r\nconst LinkDrop = ({link, css, clickHandler}) => (\r\n    <a className={css.linkCss}\r\n       href={link.href} onClick={clickHandler}\r\n       key={link.key}>\r\n        {link.text}\r\n    </a>\r\n);\r\n\r\nconst ButtonDrop = ({link, css, clickHandler}) => {\r\n    return (\r\n        <button className={css.linkCss}\r\n                type='button' onClick={() => clickHandler(link.key)}\r\n                key={link.key}>\r\n            {link.text}\r\n        </button>\r\n    );\r\n};\r\n\r\n/**\r\n * для передачи в props DropDown нужно подготовить массив объектов вида\r\n * {key: 'key', link: 'link', text: 'text'}\r\n */\r\nconst DropDown = ({\r\n                      data = [], togglerText = 'перейти...', ariaInfo = 'dropdown', dropdownSet = [],\r\n                      callback = null, routerLink = false,\r\n                      css = {\r\n                          togglerCss: 'btn dropdown-toggle btn-block',\r\n                          linkCss: 'dropdown-item w-100'\r\n                      }\r\n                  }) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggleContainer = useRef(null);\r\n    let timeOutId = null;\r\n    const dropOpenedClass = isOpen ? ' show ' : '';\r\n    const links = Array.isArray(data) ? data : [];\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', onClickOutsideHandler);\r\n        document.addEventListener('keydown', onKeyPress);\r\n        return () => {\r\n            document.removeEventListener('click', onClickOutsideHandler);\r\n            document.removeEventListener('keydown', onKeyPress);\r\n        };\r\n    });\r\n\r\n    const onClickHandler = () => setIsOpen(!isOpen);\r\n\r\n    const onButtonClickHandler = (key) => {\r\n        if (callback) {\r\n            setIsOpen(false);\r\n            callback(dropdownSet[key]);\r\n        }\r\n    };\r\n\r\n    const onRouterLinkClickHandler = (key) => {\r\n        if (callback) {\r\n            setIsOpen(false);\r\n            callback(key);\r\n        }\r\n    };\r\n\r\n    const onClickOutsideHandler = (evt) => {\r\n        if (isOpen && toggleContainer.current.contains(evt.target)) {\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    const onBlurHandler = () => {\r\n        timeOutId = setTimeout(() => {\r\n            setIsOpen(false);\r\n        }, 100);\r\n    };\r\n\r\n    const onKeyPress = (evt) => {\r\n        if (evt.keyCode === KEYCODES.ESC) {\r\n            evt.preventDefault();\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    const onFocusHandler = () => {\r\n        if (timeOutId) {\r\n            clearTimeout(timeOutId);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='dropdown mt-1 p-1' ref={toggleContainer} onBlur={onBlurHandler}\r\n             onFocus={onFocusHandler}>\r\n            <button className={css.togglerCss} type='button'\r\n                    id={ariaInfo}\r\n                    data-toggle='dropdown' aria-haspopup='true' aria-expanded='false' onClick={onClickHandler}>\r\n                {togglerText}\r\n            </button>\r\n            <div className={'dropdown-menu w-100' + dropOpenedClass} aria-labelledby={ariaInfo}>\r\n                {links.map((link, ind) =>\r\n                    (callback ?\r\n                        <ButtonDrop key={ind} link={link} css={css}\r\n                                    clickHandler={routerLink ? onRouterLinkClickHandler : onButtonClickHandler}/> :\r\n                        <LinkDrop key={ind} link={link} css={css}/>)\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropDown;\r\n","import {DATA_ROOT} from '../constants';\n\nexport const GIT_URLS = {\n    PHPTEST: {\n        name: 'Intensive-test',\n        reposUrl: DATA_ROOT + 'data/testRepos.json',\n        userUrl: DATA_ROOT + 'data/testUser.json',\n        title: 'Тестовые данные по интенсиву (из папки приложения)'\n    },\n    TEST: {\n        name: 'User-test',\n        reposUrl: DATA_ROOT + 'data/gitRepos.json',\n        userUrl: DATA_ROOT + 'data/gitUser.json',\n        title: 'Тестовые данные по пользователю github (из папки приложения).'\n    }\n    // NODETEST: {\n    //     name: 'Node-test',\n    //     reposUrl: '/data/nodeRepos.json',\n    //     userUrl: '/data/nodeUser.json',\n    //     title: 'Тестовые данные по интенсиву (из папки приложения).'\n    // },\n    // REACTTEST: {\n    //     name: 'React-test',\n    //     reposUrl: '/data/reactRepos.json',\n    //     userUrl: '/data/reactUser.json',\n    //     title: 'Тестовые данные по интенсиву (из папки приложения).'\n    // }\n};\nexport const CHART_COLORS = [\n    'rgba(58, 226, 103, 0.2)',\n    'rgba(217, 217, 194, 0.2)',\n    'rgba(89, 105, 141, 0.2)',\n    'rgba(109, 138, 224, 0.2)',\n    'rgba(54, 162, 235, 0.2)',\n    'rgba(255, 99, 132, 0.2)',\n    'rgba(175, 38, 255, 0.2)',\n    'rgba(255, 206, 86, 0.2)',\n    'rgba(75, 192, 192, 0.2)',\n    'rgba(153, 102, 255, 0.2)',\n    'rgba(255, 159, 64, 0.2)'\n];\nexport const CHART_TYPES = {\n    BAR: 'bar',\n    PIE: 'pie',\n    DOUGHNUT: 'doughnut'\n};\nexport const GIT_TYPES = {\n    INTENSIVE: 'intensive',\n    USER: 'user'\n};\nexport const LIMIT = 50;\nexport const ACADEMY_PREFIX = 'htmlacademy-';\nexport const GIT_LINK_PARTS = {\n    LINK: 'https://api.github.com/users/',\n    PAGE: '/repos?page=',\n    LIMIT: '&per_page=' + LIMIT\n};\n\nexport const GIT_HOUR_LIMIT = 60;","import {ACADEMY_PREFIX, CHART_COLORS, GIT_TYPES} from './chartconstants';\n\nconst isDigit = (str) => (str.match(/[0-9]/));\n\nexport const getIsAcademy = (text) => (text.includes(ACADEMY_PREFIX));\n\nconst parseName = (name, isAcademy) => {\n    let [academyId, project, intensiveNumber] = ['?', '?', '?'];\n    if (isAcademy) {\n        const splitted = name.split('-');\n        switch (splitted.length) {\n            case 1: {\n                [academyId, project, intensiveNumber] = ['?', splitted[0], '?'];\n                break;\n            }\n            case 2: {\n                [academyId, project, intensiveNumber] = isDigit(splitted[0]) ? [splitted[0], splitted[1], '?'] : (\n                    isDigit(splitted[1]) ? ['?', splitted[0], splitted[1]] : ['?', splitted.join('-'), '?']\n                );\n                break;\n            }\n            default: {\n                const [first, ...rest] = splitted;\n                const middle = rest.slice(0, rest.length - 1);\n                const last = rest[rest.length - 1];\n                academyId = isDigit(first) ? first : '?';\n                intensiveNumber = isDigit(last) ? last : '?';\n                project = (academyId === '?' ? first + '-' : '') + middle.join('-') + (intensiveNumber === '?' ? '-' + last : '');\n            }\n        }\n    }\n    return ({\n        academyId,\n        project,\n        intensiveNumber\n    });\n};\n\nexport const parseRepoInfo = (repo) => {\n    const isAcademy = getIsAcademy(repo.html_url);\n    const parsedName = parseName(repo.name, isAcademy);\n    return ({\n        id: repo.id,\n        name: repo.name,\n        description: repo.description,\n        academyId: parsedName.academyId,\n        project: parsedName.project,\n        intensiveNumber: parsedName.intensiveNumber,\n        homepage: repo.homepage,\n        language: repo.language\n    });\n};\n\nexport const transformUserData = (data) =>\n    ({\n        id: data.id,\n        login: data.login,\n        type: data.login.toLowerCase().includes(ACADEMY_PREFIX) ? GIT_TYPES.INTENSIVE : GIT_TYPES.USER,\n        reposCount: data.public_repos,\n        profile: data.html_url\n    });\n\nexport const transformReposData = (data) =>\n    (data.map(item => parseRepoInfo(item)));\n\nexport const getTotals = (content, totalField = 'project') => {\n    const totals = {};\n    let fieldName = '?';\n    content.forEach((repo) => {\n        fieldName = repo[totalField] ? repo[totalField] : '?';\n        totals[fieldName] = totals[fieldName] ? totals[fieldName] + 1 : 1;\n    });\n    return totals;\n};\n\nconst getDark = (colors) => (colors.map(color =>\n        (color.substring(0, color.lastIndexOf(',')) + ', 1)'))\n);\n\nexport const transformToChartData = (sourceData, type, onLegendClick) => {\n    const labels = [...sourceData.labels];\n    return ({\n        type: type,\n        data: {\n            labels: labels,\n            datasets: [{\n                label: sourceData.label,\n                data: [...sourceData.data],\n                backgroundColor: CHART_COLORS,\n                borderColor: getDark(CHART_COLORS),\n                borderWidth: 1\n            }]\n        },\n        options: {\n            scales: {\n                yAxes: [{\n                    ticks: {beginAtZero: true}\n                }]\n            },\n            onClick: (evt, item) => {\n                if (item.length >= 0 && item[0]) {\n                    onLegendClick(labels[parseInt(item[0]['_index'], 10)]);\n                }\n            }\n        }\n    });\n};\n\nexport const getPreparedData = (totals) => {\n    const keys = Object.keys(totals);\n    const labels = keys;\n    const data = keys.map(item => totals[item]);\n    return ({\n        label: 'количество репозиториев',\n        data,\n        labels\n    });\n};\n\nexport const getTotalsField = (content) => (\n    (content.user && (content.user.type === GIT_TYPES.INTENSIVE)) ? 'project' : 'language'\n);\n\nexport const getDetailsFields = (content) => (\n    (content.user && content.repos) ?\n        ((content.user.type === GIT_TYPES.INTENSIVE) ? ['academyId', 'description'] : ['name']) :\n        null\n);\n\nexport const getDropDownData = (operations) => {\n    const keys = [...Object.keys(operations)];\n    return keys.map(key => ({\n        key: key,\n        text: operations[key],\n        link: key\n    }));\n};","import React, {useRef, useEffect, useState} from 'react';\nimport {Chart} from 'chart.js';\n\nimport DropDown from '../../common/dropdown/DropDownHook';\nimport {getDropDownData, transformToChartData} from '../chartfunctions';\nimport {CHART_TYPES} from '../chartconstants';\n\nlet chart = null;\n\nconst SimpleChart = ({data = [], chartTitle, chartFooter, onLegendClick, hidden = false}) => {\n        const [chartType, setChartType] = useState(CHART_TYPES.BAR);\n        const canvas = useRef(null);\n        const chartData = transformToChartData(data, chartType, onLegendClick);\n\n        useEffect(() => {\n            drawChart();\n        });\n\n        const drawChart = () => {\n            const ctx = canvas.current.getContext('2d');\n            if (chart) {\n                chart.destroy();\n            }\n            chart = new Chart(ctx, Object.assign({}, chartData, {type: chartType}));\n        };\n\n        const onChartTypeChange = (type) => {\n            setChartType(type);\n            drawChart();\n        };\n\n        return (\n            <div className={hidden ? 'hidden' : ''}>\n                <h5 className='h5-responsive my-2'>{chartTitle}</h5>\n                <div className='d-flex mx-auto justify-content-center'>\n                    <DropDown data={getDropDownData(CHART_TYPES)} dropdownSet={CHART_TYPES}\n                              ariaInfo={'operation-dropdown'}\n                              togglerText={chartType} callback={onChartTypeChange}\n                              css={{\n                                  togglerCss: 'btn btn-light-green btn-sm dropdown-toggle',\n                                  linkCss: 'dropdown-item'\n                              }}/>\n                </div>\n                <canvas ref={canvas} id=\"simpleChart\" width=\"270\" height=\"100\"></canvas>\n                <p className='my-2'>{chartFooter}</p>\n            </div>\n        );\n    }\n;\n\nexport default SimpleChart;","import React from 'react';\n\nconst getControl = (Control, callback, buttonType, colInd, rowInd) => (\n    <Control key={rowInd + ' ' + colInd} callback={callback} buttonType={buttonType} ind={rowInd}/>\n);\n\nexport const ArrayRowCells = ({element, controls = [], rowInd}) => (\n    <React.Fragment>\n        <td className='flex-grow-1'>{element}</td>\n        {controls.length > 0 ?\n            <td className='d-flex align-items-center justify-content-center flex-nowrap h-100'>\n                {controls.map((control, colInd) => getControl(control.Control, control.callback, control.buttonType, colInd, rowInd))}\n            </td> : null\n        }\n    </React.Fragment>\n);","import React, {useRef} from 'react';\nimport {useDrag, useDrop} from 'react-dnd';\n\nimport {ArrayRowCells} from './ArrayRowCells';\nimport {DND_TYPES} from '../../constants';\n\nexport const DraggableArrayRow = ({element, rowInd, controls = [], moveRow}) => {\n\n    const dragRef = useRef();\n\n    const [, drop] = useDrop({\n        accept: DND_TYPES.ROW,\n        hover(item, monitor) {\n            if (!dragRef.current) {\n                return;\n            }\n            item.rowInd = rowInd;\n        }\n    });\n\n    const [, drag] = useDrag({\n        item: {type: DND_TYPES.ROW, text: element.text, rowInd: rowInd},\n        end: monitor => {\n            if (moveRow && parseInt(rowInd, 10) >= 0 && parseInt(monitor.rowInd, 10) >= 0) {\n                moveRow(rowInd, monitor.rowInd);\n            }\n        }\n    });\n\n    drag(drop(dragRef));\n\n    return (\n        <tr className='d-flex align-items-center draggable' key={rowInd} ref={dragRef}\n               title='Для перемещения точки маршрута - drag-and-drop строки таблицы'>\n        <ArrayRowCells element={element} controls={controls} rowInd={rowInd}/>\n    </tr>);\n};","import {ArrayRowCells} from './ArrayRowCells';\nimport React from 'react';\n\nexport const SimpleArrayRow = ({controls, element, rowInd, moveRow = null}) => (\n    <tr className='d-flex align-items-center' key={rowInd}>\n        <ArrayRowCells element={element} controls={controls} rowInd={rowInd}/>\n    </tr>\n);","import React from 'react';\nimport {DraggableArrayRow} from './DraggableArrayRow';\nimport {SimpleArrayRow} from './SimpleArrayRow';\n\nexport const DetailsHeader = ({isArray}) => (isArray ?\n        <tr>\n            <th className='th-sm font-weight-bold mdb-color text-white'>Список</th>\n        </tr> :\n        <tr>\n            <th className='th-sm font-weight-bold mdb-color text-white'>Название поля</th>\n            <th className='th-sm font-weight-bold mdb-color text-white'>Значение</th>\n        </tr>\n);\n\nexport const ArrayRows = ({details, controls = [], draggableRows, moveRow}) => (\n    details.map((element, rowInd) => (\n        draggableRows ?\n            <DraggableArrayRow element={element} controls={controls} rowInd={rowInd} key={'row'+rowInd} moveRow={moveRow}/> :\n            <SimpleArrayRow  element={element} controls={controls} rowInd={rowInd} key={'row'+rowInd}/>\n    ))\n);\n\nexport const ObjectRows = ({details}) => {\n    const columns = Array.isArray(details) ? details : Object.keys(details);\n    return (\n        <React.Fragment>\n            {columns.map((element, ind) => (\n                <tr key={ind}>\n                    <td>{element}\n                    </td>\n                    <td>{details[element]}</td>\n                </tr>\n            ))}\n        </React.Fragment>);\n};\n\nconst SimpleTable = ({details, noHeader = false, controls = [], draggableRows = false, moveRow = null}) => (\n    <table className='table table-sm table-bordered w-100'>\n        <thead>\n        {noHeader ? null : <DetailsHeader isArray={Array.isArray(details)}/>}\n        </thead>\n        <tbody>\n        {Array.isArray(details) ?\n            <ArrayRows details={details} controls={controls} draggableRows={draggableRows} moveRow={moveRow}/> :\n            <ObjectRows details={details}/>}\n        </tbody>\n    </table>\n);\n\nexport default SimpleTable;\n\n","import React, {useEffect} from 'react';\nimport {KEYCODES} from '../../constants';\nimport SimpleTable from '../simpletable/SimpleTable';\n\n/**\n * @param details - Объект или массив строк\n * @param unsetDetails - Функция, изменяющая состояние модального окна с таблицей\n */\n\nconst Details = ({details, unsetDetails, title = 'Информация о выбранной записи:'}) => {\n\n    const onKeyDown = (evt) => {\n        if (evt.keyCode === KEYCODES.ESC) {\n            evt.preventDefault();\n            unsetDetails();\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', onKeyDown);\n        return () => document.removeEventListener('keydown', onKeyDown);\n    });\n\n    return (details ?\n            <React.Fragment>\n                <div className='mt-4 p-3 shadow-lg fixed-bottom h-100 bg-white'>\n                    <button className='btn btn-sm btn-mdb-color' onClick={unsetDetails} type={'button'}\n                            title='Для возврата к предыдущему экрану - Еsc'>\n                        выйти из просмотра (ESC)\n                    </button>\n                    <h5 className='text-center my-3'>{title}</h5>\n                    <div className='overflow-auto h-100'>\n                        <SimpleTable details={details}/>\n                    </div>\n\n                </div>\n            </React.Fragment>\n            : null\n    );\n};\n\nexport default Details;","import React, {useState} from 'react';\n\nconst GitUserForm = ({onGitUserClick}) => {\n    const [inputValue, setInputValue] = useState('');\n    return (\n        <div className='row justify-content-center align-items-center mx-auto p-3'>\n            <button className=\"col-6 btn btn-sm btn-outline-mdb-color mx-1\"\n                    onClick={() => onGitUserClick(inputValue.trim())}\n                    title='Получить данные по указанному пользователю GitHub'>\n                {'Построить график по: ' + inputValue}\n            </button>\n            <input className='col-5 form-control' value={inputValue} pattern='[A-Za-z0-9_-]'\n                   title='Пользователь GitHub для построения графика' placeholder='Github user'\n                   type='text' id='idGitUser' onChange={(evt) => setInputValue(evt.target.value)}/>\n        </div>\n    );\n};\n\nexport default GitUserForm;","import React, {useState} from 'react';\n\nimport Loader from '../common/loader/Loader';\nimport SimpleChart from './chart/SimpleChart';\nimport Details from '../common/details/Details';\nimport GitUserForm from './form/GitUserForm';\n\nimport {\n    getTotals,\n    getTotalsField,\n    transformUserData,\n    transformReposData,\n    getDetailsFields, getPreparedData, getIsAcademy\n} from './chartfunctions';\nimport {GIT_HOUR_LIMIT, GIT_LINK_PARTS, GIT_URLS, LIMIT} from './chartconstants';\n\n\nconst getPagesUrls = (tmpUser, url) => {\n    const isGitData = (typeof url === 'string');\n    let pages = [];\n    if (isGitData) {\n        const totalCount = tmpUser['reposCount'] ? tmpUser['reposCount'] : 0;\n        const totalPages = Math.ceil(totalCount / parseInt(LIMIT, 10)) || 1;\n\n        for (let i = 1; i <= totalPages; i++) {\n            let repoUrl = isGitData ?\n                url + GIT_LINK_PARTS.PAGE + (i) + GIT_LINK_PARTS.LIMIT :\n                url.reposUrl;\n            pages.push(repoUrl);\n        }\n    }\n    return isGitData ? pages : [url.reposUrl];\n};\n\nconst AppChart = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [content, setContent] = useState({user: null, repos: []});\n    const [wasError, setWasError] = useState(null);\n    const [currentDetails, setCurrentDetails] = useState(null);\n\n    const onError = (errorMessage) => {\n        setWasError(errorMessage);\n        setContent({user: null, repos: []});\n        setIsLoading(false);\n    };\n\n    const getData = (url = GIT_URLS.TEST, canceled = false) => {\n\n        setIsLoading(true);\n        setWasError(false);\n\n        fetch(typeof url === 'string' ? url : url.userUrl)\n            .then(response => response.json())\n            .then(userData => {\n                if (!canceled) {\n                    const tmpUser = transformUserData(userData);\n                    const pages = getPagesUrls(tmpUser, url);\n\n                    if (pages.length < GIT_HOUR_LIMIT) {\n                        Promise.all(pages.map(page => fetch(page)))\n                            .then(response => Promise.all(response.map(\n                                response => response.json()\n                            )))\n                            .then(results => {\n                                const jointData = [];\n                                results.forEach(result => jointData.push(...result));\n                                setContent({user: tmpUser, repos: transformReposData(jointData)});\n                                setIsLoading(false);\n                            }).catch(error => {\n                            if (!canceled) {\n                                onError('Произошла ошибка при получении данных о репозиториях');\n                            }\n                        });\n                    } else {\n                        onError('У github для неавторизованных пользователей ограничение на 60 запросов в час. Не стоит и пытаться выполнить запрос с таким количеством страниц.');\n                    }\n                }\n\n            })\n            .catch(error => {\n                if (!canceled) {\n                    onError('Произошла ошибка при получении данных пользователя');\n                }\n            });\n    };\n\n    const onLegendClick = (something) => {\n        const fields = getDetailsFields(content);\n        if (fields) {\n            const filterField = getTotalsField(content);\n            const details = content.repos.filter(\n                repo => ((repo[filterField] === something) || (something === '?' && !repo[filterField]))).map(\n                repo => fields.reduce((rv, field) => (rv + ' ' + repo[field]), ''));\n            setCurrentDetails({details: details, title: something});\n        }\n    };\n\n    const onTotalButtonClick = () => {\n        if (content.user) {\n            const isAcademy = getIsAcademy(content.user.login);\n            const fieldName = isAcademy ? 'project' : 'language';\n            const totalDetails = {};\n            const uniqueIdCount = isAcademy ? content.repos.map(repo => repo.academyId).filter((v, i, a) => a.indexOf(v) === i).length : 0;\n            const aboutId = isAcademy ? `. Из них с неповторяющимися Id академии - ${uniqueIdCount}` : ``;\n            content.repos.forEach(repo => {\n                let key = repo[fieldName] ? repo[fieldName] : '?';\n                totalDetails[key] = totalDetails[key] ? totalDetails[key] + 1 : 1;\n            });\n            setCurrentDetails({\n                details: totalDetails,\n                title: 'Всего репозиториев: ' + content.user.reposCount + aboutId + '. Разбивка по ' + (isAcademy ? 'проектам' : 'языкам') + ':'\n            });\n        }\n    };\n\n    const onGitUserClick = (userName) => {\n        if (userName !== '' && userName.match(/[A-Za-z\\d_-]/)) {\n            getData(GIT_LINK_PARTS.LINK + userName);\n        } else {\n            setWasError('В имени пользователя допустимы только латинские символы, цифры, дефис и подчеркивание');\n        }\n    };\n\n    return (\n        <div>\n            <h4 className='h4-responsive'>AppChart</h4>\n            <div className=\"btn-group mt-2\" role=\"group\" aria-label=\"Получение данных\">\n                {Object.keys(GIT_URLS).map(item => (\n                    <button className=\"btn btn-sm btn-outline-mdb-color mx-1 cloudy-knoxville-gradient\" key={item}\n                            onClick={() => getData(GIT_URLS[item])}\n                            title={GIT_URLS[item].title}>\n                        {GIT_URLS[item].name}\n                    </button>\n                ))}\n            </div>\n            <GitUserForm onGitUserClick={onGitUserClick}/>\n\n            {isLoading ?\n                <Loader/> :\n                <React.Fragment>\n                    {wasError ?\n                        <p className='mt-2 text-danger d'><small>{wasError}</small></p> :\n                        currentDetails ?\n                            <Details details={currentDetails.details} title={currentDetails.title}\n                                     unsetDetails={() => setCurrentDetails(null)}/> :\n                            <React.Fragment>\n                                <SimpleChart\n                                    data={getPreparedData(getTotals(content.repos, getTotalsField(content)))}\n                                    chartTitle={'Диаграмма ' + (content.user ? content.user.login : '')}\n                                    chartFooter={content.user ? 'Всего публичных репозиториев: ' + content.user['reposCount'] : ''}\n                                    onLegendClick={onLegendClick}\n                                    hidden={!(content.user)}/>\n                                <button\n                                    className={'btn btn-sm btn-mdb-color ' + (content.user ? 'd-inline-block' : 'd-none')}\n                                    type='button'\n                                    onClick={onTotalButtonClick}>\n                                    Итоги в виде таблицы\n                                </button>\n                            </React.Fragment>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nexport default AppChart;","import {DATA_ROOT} from '../constants';\n\nexport const DATA_URLS = {\n    SMALL: {\n        name: '20 слов',\n        url: 'https://greycat20142017.github.io/pseudodb/rtasks20.json',\n        title: 'Данные из удаленного источника. Могут быть временно недоступны.'\n    },\n    BIG: {\n        name: '200 слов',\n        url: 'https://greycat20142017.github.io/pseudodb/rtasks200.json',\n        title: 'Данные из удаленного источника. Могут быть временно недоступны.'\n    },\n    TEST: {\n        name: 'тест', url: DATA_ROOT + 'data/test.json',\n        title: 'Тестовые данные из папки приложения.'\n    }\n};\nexport const SORT_DIRECTIONS = {\n    ASC: 'asc',\n    DESC: 'desc'\n};\n\nexport const PAGE_LIMIT = 10;","import React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nimport {SORT_DIRECTIONS} from '../tableconstants';\n\nconst SortIndicator = ({currentColumn, sortField, sortDirection, onDirectionChange}) => {\n    const arrow = sortDirection === SORT_DIRECTIONS.ASC ?\n        <h5 className='font-weight-bold d-inline ml-2' aria-hidden='true' onClick={onDirectionChange}>&uarr;</h5> :\n        <h5 className='font-weight-bold d-inline ml-2' aria-hidden='true' onClick={onDirectionChange}>&darr;</h5>;\n    return (currentColumn === sortField) ? arrow : null;\n};\n\nconst TableRow = ({row, ind, columns, onRowClick}) => (\n    <tr className='cursor-pointer' key={ind} title='Клик - для просмотра детальной информации'\n        onClick={() => onRowClick(row)}>{columns.map(column =>\n        <td key={column + ind}>{row[column]}</td>)}\n    </tr>\n);\n\nconst Table = ({data, onTableSort, ...rest}) => {\n    const columns = Array.isArray(data) && data.length > 0 ? Object.keys(data[0]) : [];\n    const noData = !(columns.length > 0 && data.length > 0);\n\n    const onPageChange = (paginationPage) => (rest.onPageChange(paginationPage.selected));\n\n    return (\n        noData ? <p className='text-mdb-color py-2'><small>Нет данных для вывода в таблицу</small></p> :\n            <React.Fragment>\n                <table className='table table-sm table-striped table-bordered my-3' cellSpacing='1' width='100%'\n                       id='idTable'>\n                    <thead>\n                    <tr>\n                        {columns.map(column =>\n                            <th className='th-sm font-weight-bold mdb-color text-white cursor-pointer'\n                                key={column + 'th'} onClick={() => onTableSort(column)}>\n                                {column}\n                                <SortIndicator currentColumn={column} {...rest}/>\n                            </th>)\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {data.map((row, ind) =>\n                        <TableRow key={ind} row={row} ind={ind} columns={columns} onRowClick={rest.onRowClick}/>\n                    )}\n                    </tbody>\n                </table>\n\n                {noData || rest.pageCount < 2 ? null :\n                    <ReactPaginate\n                        previousLabel={<span>&lArr;</span>}\n                        nextLabel={<span>&rArr;</span>}\n                        breakLabel={<span className='gap'>...</span>}\n                        pageCount={rest.pageCount}\n                        onPageChange={onPageChange}\n                        forcePage={rest.currentPage}\n                        containerClassName={'pagination'}\n                        pageClassName={'page-item'}\n                        pageLinkClassName={'page-link'}\n                        previousLinkClassName={'page-link mdb-color-text'}\n                        nextLinkClassName={'page-link mdb-color-text'}\n                        disabledClassName={'disabled'}\n                        activeClassName={'active'}\n                    />\n                }\n            </React.Fragment>\n\n    );\n};\n\nexport default Table;","import React, {useState} from 'react';\nimport {KEYCODES} from '../../constants';\n\nconst Filter = ({onFilterApply}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const onKeyPress = (evt) => {\n        if (evt.keyCode === KEYCODES.ENTER) {\n            evt.preventDefault();\n            onFilterApply(evt.target.value);\n        }\n    };\n\n    const clearFilter = () => {\n        if (inputValue !== '') {\n            setInputValue('');\n            onFilterApply('');\n        }\n    };\n\n    return (\n        <div className='md-form d-flex align-items-baseline mt-3 mb-2'>\n            <label htmlFor='idFilter'>{inputValue.trim() === '' ? 'Текст для поиска' : ''}</label>\n            <input className='form-control' value={inputValue}\n                   type='text' id='idFilter' onChange={(evt) => setInputValue(evt.target.value)}\n                   onKeyDown={onKeyPress}/>\n            <div className='btn-group' role='group' aria-label='группа кнопок'>\n                <button className={'btn btn-mdb-color btn-sm'} type='button' onClick={() => onFilterApply(inputValue)}\n                        title='выполнить поиск подстроки во всех полях таблицы'>\n                    поиск\n                </button>\n                <button className={'btn btn-mdb-color btn-sm ml-1'} type='button' onClick={clearFilter}\n                        title='сбросить выражение поиска'>\n                    &#10008;<span className='visually-hidden'>сбросить</span>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Filter;","import React, {useState} from 'react';\nimport {orderBy, chunk} from 'lodash';\n\nimport Loader from '../common/loader/Loader';\nimport Table from './table/Table';\nimport Filter from './filter/Filter';\nimport Details from '../common/details/Details';\nimport {DATA_URLS, PAGE_LIMIT, SORT_DIRECTIONS} from './tableconstants';\n\nconst containsPattern = (itemObject, pattern) => (\n    Object.keys(itemObject).reduce((rv, current) => (rv || itemObject[current].toLowerCase().includes(pattern.toLowerCase())), false)\n);\n\nconst getPreparedData = (content, sortField, sortDirection, filterValue) => (\n    chunk(content.filter(item => containsPattern(item, filterValue)), PAGE_LIMIT)\n);\n\nconst AppTable = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [content, setContent] = useState([]);\n    const [wasError, setWasError] = useState(false);\n    const [filterValue, setFilterValue] = useState('');\n    const [currentPage, setCurrentPage] = useState(0);\n    const [sortField, setSortField] = useState('');\n    const [sortDirection, setSortDirection] = useState(SORT_DIRECTIONS.ASC);\n    const [currentDetails, setCurrentDetails] = useState(null);\n    const preparedData = getPreparedData([...content], sortField, sortDirection, filterValue);\n\n    const basicReset = () => {\n        setCurrentPage(0);\n        setCurrentDetails(null);\n        setFilterValue('');\n        setIsLoading(false);\n    };\n\n    const getData = (url, canceled = false) => {\n        setIsLoading(true);\n        setWasError(false);\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                if (!canceled) {\n                    const defaultSortField = data.content.length > 0 && Object.keys(data.content[0]).length > 0 ?\n                        Object.keys(data.content[0])[0] : '';\n                    setContent(orderBy([...data.content], defaultSortField, sortDirection));\n                    setWasError(false);\n                    setSortField(defaultSortField);\n                    basicReset();\n                }\n            })\n            .catch(error => {\n                if (!canceled) {\n                    setWasError(true);\n                    setContent([]);\n                    basicReset();\n                }\n            });\n    };\n\n    const onTableSort = (column) => (setSortField(column));\n\n    const onPageChange = (page) => (setCurrentPage(page));\n\n    const onRowClick = (rowData) => (setCurrentDetails(rowData));\n\n    const onDirectionChange = () => (\n        setSortDirection(sortDirection === SORT_DIRECTIONS.ASC ? SORT_DIRECTIONS.DESC : SORT_DIRECTIONS.ASC)\n    );\n\n    const onFilterApply = (value) => {\n        setFilterValue(value);\n        setCurrentPage(0);\n    };\n\n    return (\n        <div>\n            <h4 className='h4-responsive py-3 mdb-color-text'>Таблица с данными (AppTable)</h4>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Получение данных\">\n                {Object.keys(DATA_URLS).map(item => (\n                    <button className=\"btn btn-sm btn-outline-mdb-color\" key={item}\n                            onClick={() => getData(DATA_URLS[item].url)}\n                            title={DATA_URLS[item].title}>\n                        {DATA_URLS[item].name}\n                    </button>\n                ))}\n            </div>\n            {wasError ? <p className='p-2 text-danger'>Ошибка при загрузке данных.</p> : null}\n            {isLoading ?\n                <Loader/> :\n                currentDetails ? <Details details={currentDetails} unsetDetails={() => setCurrentDetails(null)}/> :\n                    <React.Fragment>\n                        {content.length > 0 ? <Filter onFilterApply={onFilterApply}/> : null}\n                        <Table\n                            data={preparedData.length > 0 ? orderBy([...preparedData[currentPage]], sortField, sortDirection) : []}\n                            currentPage={currentPage} onPageChange={onPageChange} pageCount={preparedData.length}\n                            sortField={sortField} sortDirection={sortDirection}\n                            onTableSort={onTableSort} onDirectionChange={onDirectionChange} onRowClick={onRowClick}/>\n\n                    </React.Fragment>\n            }\n        </div>\n    );\n};\n\nexport default AppTable;","import {DEFAULT_POINT, DELIMITER, YANDEX_PLACEMARK_PRESETS} from './mapconstants';\nimport {MAP_TYPES} from '../constants';\n\nexport const getYmapsPoint = (point, ind) => {\n    return new window.ymaps.GeoObject(\n        {\n            geometry: {\n                type: 'Point',\n                coordinates: [...point.coords]\n            },\n            properties: {\n                iconContent: point.name,\n                hintContent: point.title\n            }\n        },\n        {\n            preset: ind === 0 ? YANDEX_PLACEMARK_PRESETS.START_POINT : YANDEX_PLACEMARK_PRESETS.COMMON_POINT,\n            draggable: true,\n            isMarker: true,\n            ind: ind\n        }\n    );\n};\n\nexport const getYMapsRoute = (points) => {\n    return new window.ymaps.GeoObject(\n        {\n            geometry: {\n                type: 'LineString',\n                coordinates: [...points.map(point => point.coords)]\n            },\n            properties: {\n                hintContent: 'Маршрут'\n            }\n        }, {\n            geodesic: true,\n            strokeWidth: 2,\n            strokeColor: 'blue'\n        }\n    );\n};\n\nexport const isPointInside = (name, limits) => {\n    return window.ymaps.geoQuery(window.ymaps.geocode(name)).searchInside(limits);\n};\n\nexport const getPlacemarkTitle = (coords, name = '') => (\n    Array.isArray(coords) ? name + ' - ' + coords.map(item => parseInt(item).toFixed(3)).join(DELIMITER) : name\n);\n\nexport const getCenterByMapType = (map, mapType) => {\n    if (map) {\n        switch (mapType) {\n            case MAP_TYPES.YANDEX: {\n                return map ? map.getCenter() : DEFAULT_POINT.coords;\n            }\n            case MAP_TYPES.GIS: {\n                const center = (map && map.mapa) ? map.mapa.getCenter() : null;\n                return center ? [center.lat, center.lng] : DEFAULT_POINT.coords;\n            }\n            default: {\n                return DEFAULT_POINT.coords;\n            }\n        }\n    }\n    return DEFAULT_POINT.coords;\n};\n\nexport const getHtmlIcon = (ind) => (\n    ind === 0 ?\n        `<div class='icon-2gis icon-2gis--first'><span>${ind + 1}</span></div>` :\n        `<div class='icon-2gis'><span>${ind + 1}</span></div>`\n);","import {getPlacemarkTitle} from './mapfunctions';\n\nexport const DELIMITER = ' : ';\nexport const POINT_TEXT = 'Точка ';\n\nexport const DEFAULT_POINT = {name: 'Центр по умолчанию', coords: [45.000, 40.000], title: getPlacemarkTitle([45.000, 40.000])};\n\nexport const DEFAULT_POINTS = [\n   {name: POINT_TEXT + '1', coords: [45.201, 41.951], title: getPlacemarkTitle([45.201, 41.951], POINT_TEXT + '1')},\n   {name: POINT_TEXT + '2', coords: [44.056, 43.044], title: getPlacemarkTitle([44.056, 43.044], POINT_TEXT + '2')}\n];\n\nexport const GEO_REG_EXP = /[0-9]{1-2}:[0-9]{1-3}/;\n\nexport const YANDEX_PLACEMARK_PRESETS = {\n  START_POINT: 'islands#redStretchyIcon',\n  COMMON_POINT: 'islands#blueStretchyIcon'\n};","import React, {useEffect} from 'react';\nimport {DEFAULT_POINT} from './mapconstants';\nimport {getYmapsPoint, getYMapsRoute} from './mapfunctions';\nimport Loader from '../common/loader/Loader';\n\nconst MapYandex = ({map, setMap, geoCollection, setGeoCollection, points, onChangeMarkerCoords}) => {\n\n    useEffect(() => {\n        const initMap = () => {\n            const mapa = new window.ymaps.Map('id-map-api', {\n                center: DEFAULT_POINT.coords,\n                zoom: 6\n            });\n            mapa.behaviors.disable('scrollZoom');\n            mapa.controls.remove('searchControl').remove('trafficControl').remove('geolocationControl').remove('typeSelector');\n            setMap(mapa);\n        };\n        if (!map && window.ymaps) {\n            window.ymaps.ready(initMap);\n        }\n    }, [map, setMap]);\n\n    useEffect(() => {\n        if (map && window.ymaps && !geoCollection) {\n            let geo = new window.ymaps.GeoObjectCollection({}, {\n                preset: 'islands#redCircleIcon',\n                strokeWidth: 4,\n                geodesic: true\n            });\n            map.geoObjects.add(geo);\n            setGeoCollection(geo);\n        }\n    }, [map, geoCollection, setGeoCollection]);\n\n\n    useEffect(() => {\n        const onMarkerDragEnd = (e) => {\n            const obj = e.get('target');\n            if (obj.options.get('isMarker')) {\n                const placemarkCoords = map.options.get('projection').fromGlobalPixels(\n                    map.converter.pageToGlobal(e.get('position')),\n                    map.getZoom()\n                );\n                onChangeMarkerCoords(obj.options.get('ind'), placemarkCoords);\n            }\n        };\n\n        const refreshMap = () => {\n            geoCollection.removeAll();\n            points.forEach((point, ind) => {\n                let marker = getYmapsPoint(point, ind);\n                geoCollection.add(marker);\n                marker.events.add('dragend', onMarkerDragEnd);\n            });\n            const polyline = getYMapsRoute(points);\n            geoCollection.add(polyline);\n        };\n        if (map && window.ymaps && geoCollection) {\n            refreshMap();\n        }\n    }, [points, geoCollection, map, onChangeMarkerCoords]);\n\n\n    return (\n        <div className='map map--api' id='id-map-api'>\n            <Loader message={'Загрузка карты...'}/>\n        </div>\n    );\n};\n\nexport default MapYandex;","import React, {useEffect} from 'react';\n\nimport {DEFAULT_POINT} from './mapconstants';\nimport {getHtmlIcon, getPlacemarkTitle} from './mapfunctions';\nimport Loader from '../common/loader/Loader';\n\nconst Map2Gis = ({map, setMap, geoCollection, setGeoCollection, points, onChangeMarkerCoords}) => {\n    useEffect(() => {\n        const initMap = () => {\n            window.DG.then(function () {\n                const mapa = window.DG.map('id-map-api', {\n                    'center': DEFAULT_POINT.coords,\n                    'zoom': 6,\n                    'scrollWheelZoom': false\n                });\n                setMap(mapa);\n            });\n        };\n        if (!map) {\n            initMap();\n        }\n    }, [map, setMap]);\n\n    useEffect(() => {\n            if (map && !geoCollection) {\n                const geoCollection = window.DG.featureGroup();\n                geoCollection.addTo(map);\n                setGeoCollection(geoCollection);\n            }\n        }, [map, geoCollection, setGeoCollection]\n    );\n\n\n    useEffect(() => {\n        const onMarkerDragEnd = (e) => {\n            const marker = e.target;\n            const lat = marker._latlng.lat.toFixed(3);\n            const lng = marker._latlng.lng.toFixed(3);\n            onChangeMarkerCoords(marker.options.alt, [lat, lng]);\n        };\n\n        const refreshMap = () => {\n            geoCollection.eachLayer(layer => {\n                layer.clearAllEventListeners();\n                geoCollection.removeLayer(layer);\n            });\n            setGeoCollection(geoCollection);\n            points.forEach((point, ind) => {\n                window.DG.marker([...point.coords], {\n                    draggable: true,\n                    title: getPlacemarkTitle(point.coords, point.name),\n                    alt: point.name,\n                    icon: window.DG.divIcon({html: getHtmlIcon(ind)})\n                }).on('dragend', onMarkerDragEnd).addTo(geoCollection);\n            });\n            window.DG.polyline(points.map(point => point.coords), {\n                color: '#59698d',\n                weight: 2,\n                opacity: 0.5\n            }).addTo(geoCollection);\n            geoCollection.addTo(map);\n        };\n        if (map && geoCollection) {\n            refreshMap();\n        }\n    }, [points, map, geoCollection, setGeoCollection, onChangeMarkerCoords]);\n\n\n    return (\n        <div className='map map--api' id='id-map-api'>\n            <Loader message={'Загрузка карты...'}/>\n        </div>\n    );\n};\n\n\nexport default Map2Gis;","import React, {useState} from 'react';\nimport {DndProvider} from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport SimpleTable from '../../common/simpletable/SimpleTable';\nimport {GEO_REG_EXP} from '../mapconstants';\nimport {CONTROL_BUTTON_TYPES, KEYCODES} from '../../constants';\nimport {getButtonTypeClass} from '../../functions';\n\nconst ControlButton = ({callback, buttonType, ind}) => (\n    <button className={'btn btn-sm m-0 py-1 px-2 mx-1 ' + getButtonTypeClass(buttonType)}\n            type='button' title={buttonType.title} onClick={() => callback(ind)}>\n        <span>{buttonType.icon}</span><span className='visually-hidden'>{buttonType.title}</span>\n    </button>\n);\n\nconst MapForm = ({routePoints, onAddPoint, onDeletePoint, onUp, onDown, moveRow}) => {\n    const [inputValue, setInputValue] = useState('');\n    const [wasInput, setWasInput] = useState(false);\n\n    const onEnterPress = (evt) => {\n        if (evt.keyCode === KEYCODES.ENTER) {\n            evt.preventDefault();\n            const pointData = evt.target.value;\n            const result = pointData;\n            if (inputValue.trim() !== '') {\n                setInputValue('');\n                setWasInput(false);\n                onAddPoint(result);\n            } else {\n                setWasInput(true);\n            }\n        }\n    };\n\n    return (\n        <div className='w-100'>\n            <input\n                className={'form-control ' + (inputValue.trim() === '' && !wasInput) ? 'is_valid' : 'is-invalid'}\n                value={inputValue} pattern={GEO_REG_EXP}\n                title='Название для новой точки маршрута. Enter - для завершения ввода.'\n                placeholder='... новая точка маршрута' required\n                type='text' id='idGitUser' onChange={(evt) => setInputValue(evt.target.value)}\n                onKeyDown={onEnterPress}/>\n\n                <DndProvider backend={HTML5Backend}>\n            <SimpleTable details={routePoints.map(item => item.name)} noHeader={true} draggableRows={true} moveRow={moveRow}\n                         controls={[\n                             {Control: ControlButton, buttonType: CONTROL_BUTTON_TYPES.DELETE, callback: onDeletePoint},\n                             {Control: ControlButton, buttonType: CONTROL_BUTTON_TYPES.UP, callback: onUp},\n                             {Control: ControlButton, buttonType: CONTROL_BUTTON_TYPES.DOWN, callback: onDown}\n                         ]}/>\n                </DndProvider>\n\n            <p><small>Новые точки маршрута добавляются в центр карты для последующего перемещения в нужную точку\n                карты.</small></p>\n            <p><small>Ибо геокодинг, кажется, только по ключу.</small></p>\n        </div>\n    );\n};\n\nexport default MapForm;","import React, {useState, useEffect} from 'react';\nimport update from 'immutability-helper';\n\nimport MapYandex from './MapYandex';\nimport Map2Gis from './Map2Gis';\n\nimport MapForm from './mapform/MapForm';\nimport {getCenterByMapType, getPlacemarkTitle} from './mapfunctions';\nimport {moveUp, moveDown} from '../functions';\nimport {DEFAULT_POINTS, DELIMITER} from './mapconstants';\nimport {KEYCODES, MAP_TYPES} from '../constants';\n\nconst AppMap = ({mapType, mapInit = null, geoInit = null}) => {\n    const [routePoints, setRoutePoints] = useState([...DEFAULT_POINTS]);\n    const [map, setMap] = useState(mapInit);\n    const [geoCollection, setGeoCollection] = useState(geoInit);\n    const [showSidebar, setShowSidebar] = useState(false);\n\n    const onKeyDown = (evt) => {\n        if (evt.keyCode === KEYCODES.ESC) {\n            evt.preventDefault();\n            setShowSidebar(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', onKeyDown);\n        return () => document.removeEventListener('keydown', onKeyDown);\n    });\n\n    const onDeletePoint = (delIndex) => (\n        setRoutePoints(routePoints.filter((item, index) => index !== delIndex))\n    );\n\n    const onUp = (ind) => (\n        setRoutePoints(moveUp(routePoints, ind))\n    );\n\n    const onDown = (ind) => (\n        setRoutePoints(moveDown(routePoints, ind))\n    );\n\n    const onChangeMarkerCoords = (index, newCoords) => (\n        setRoutePoints(routePoints.map((item, ind) => (index === ind) ?\n            Object.assign({}, item, {coords: [...newCoords], title: getPlacemarkTitle(newCoords)}) : item))\n    );\n\n    const on2GisMovePoint = (name, newCoords) => {\n        const point = routePoints.find((item) => item.name === name);\n        if (point) {\n            setRoutePoints(routePoints.map(item => (item.name === name) ? ({\n                name: name,\n                coords: newCoords,\n                title: newCoords.join(DELIMITER)\n            }) : item));\n        }\n    };\n\n    const onAddPoint = (name) => {\n        if (name) {\n            const newPointCoords = getCenterByMapType(map, mapType);\n            setRoutePoints([...routePoints, {\n                name: name,\n                coords: [...newPointCoords],\n                title: getPlacemarkTitle(newPointCoords, name)\n            }]);\n        }\n    };\n\n    const moveRow = (dragIndex, hoverIndex) => {\n        const draggedPoint = routePoints[dragIndex];\n        setRoutePoints(\n            update(routePoints, {\n                $splice: [[dragIndex, 1], [hoverIndex, 0, draggedPoint]],\n            }),\n        );\n    };\n\n    return (\n        <div className='row'>\n            <div\n                className={showSidebar ? 'd-block col-11 h-100 position-fixed fixed-center on-top' : 'd-none d-md-block col-4'}>\n                <MapForm routePoints={routePoints} onDeletePoint={onDeletePoint} onAddPoint={onAddPoint}\n                         onUp={onUp} onDown={onDown} moveRow={moveRow}/>\n                {showSidebar ?\n                    <button className='btn btn-mdb-color btn-sm' onClick={() => setShowSidebar(false)}>\n                        закрыть форму (Esc)\n                    </button> : null\n                }\n            </div>\n            <div>\n                <button className={showSidebar ? ' d-none' : 'btn btn-sm btn-mdb-color col-1 d-md-none'}\n                        onClick={() => setShowSidebar(true)} title='открыть форму редактирования маршрута'>\n                    &#10148;<span className='visually-hidden'>открыть форму редактирования маршрута</span>\n                </button>\n            </div>\n            <div className='col-10 col-md-8 border-light'>\n                {\n                    mapType === MAP_TYPES.YANDEX ?\n                        <MapYandex map={map} setMap={setMap} points={routePoints}\n                                   geoCollection={geoCollection} setGeoCollection={setGeoCollection}\n                                   onChangeMarkerCoords={onChangeMarkerCoords}/> :\n                        mapType === MAP_TYPES.GIS ?\n                            <Map2Gis map={map} setMap={setMap} points={routePoints}\n                                     geoCollection={geoCollection} setGeoCollection={setGeoCollection}\n                                     onChangeMarkerCoords={on2GisMovePoint}/> : null\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default AppMap;","import React from 'react';\nimport {getInlineSvg} from '../functions';\nimport {MDB_COLOR} from '../constants';\n\nconst AppMain = () => (\n    <React.Fragment>\n        <p className='mt-3'>Просто найденные на просторах интернета задания по React.</p>\n        {getInlineSvg('rtasks', 100, 100, MDB_COLOR, MDB_COLOR)}\n        <p>Без какой-либо общей идеи и реальной цели.</p>\n        <p>Исключительно для внесения разнообразия в учебные задачи.</p>\n    </React.Fragment>\n);\n\nexport default AppMain;","import React, {useState} from 'react';\nimport axios from 'axios';\n\nimport Loader from '../common/loader/Loader';\nimport SimpleTable from '../common/simpletable/SimpleTable';\n\nconst FIREBASE_URL = 'https://rtasks-cacd5.firebaseio.com/candy.json';\n\nconst AppFirebase = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [content, setContent] = useState([]);\n    const [wasError, setWasError] = useState(null);\n\n    const getData = async (url) => {\n        setIsLoading(true);\n        setWasError(null);\n        try {\n            const response = await axios.get(url, {'limitToFirst': 1});\n            const data = response.data;\n            setContent(data ? data : []);\n            setIsLoading(false);\n        } catch (err) {\n            setWasError(err.message);\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? <Loader message={'Ожидание ответа сервера...'}/> :\n                <div>\n                    <h4 className='h4-responsive py-2 mdb-color-text'>Данные (AppFirebase)</h4>\n                    <p className='text-warning'>{wasError}</p>\n                    <div className=\"btn-group pb-2\" role=\"group\" aria-label=\"Firebase\">\n                        <button className=\"btn btn-sm btn-outline-mdb-color\"\n                                onClick={() => getData(FIREBASE_URL)}\n                                title='Получение тестовых данных'>\n                            получить данные\n                        </button>\n                    </div>\n                    {content.length > 0 ?\n                        <SimpleTable details={content.map(row => `${row.kind} \"${row.name}\"`)}/> :\n                        null\n                    }\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nexport default AppFirebase;","import React, {useContext, useState} from 'react';\n// import {navigate} from 'hookrouter';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport UserContext from '../UserContext';\nimport Loader from '../../common/loader/Loader';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [wasError, setWasError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n    const {authUser} = useContext(UserContext);\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        if (email.trim() !== '' && password.trim() !== '') {\n            login({email, password});\n        } else {\n            setWasError('Необходимо заполнить e-mail и пароль');\n        }\n    };\n\n    const login = (regData) => {\n        setIsLoading(true);\n        setWasError(null);\n        firebase.auth().signInWithEmailAndPassword(regData.email, regData.password).then(() => {\n            setIsLoading(false);\n        }).catch(error => {\n            setWasError(error.message);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <section className=\"col-12 col-md-6 py-3 justify-content-center container\">\n            <h3 className='text-center mb-2'>Вход</h3>\n            {authUser ?\n                <h5 className='text-center mb-2'>выполнен под пользователем {authUser.displayName}</h5> :\n                <form className='needs-validation mx-auto p-3 white mdb-color-text rounded shadow-lg text-center'\n                      onSubmit={onSubmit}>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='email'>E-mail</label>\n                        <input className='form-control' autoComplete=\"off\"\n                               type='email' name='email' placeholder='E-mail' id='email' required\n                               value={email} onChange={(evt) => setEmail(evt.target.value)}/>\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='password'>Пароль</label>\n                        <input className='form-control' autoComplete=\"off\"\n                               type='password' name='password' placeholder='Пароль' required\n                               value={password} onChange={(evt) => setPassword(evt.target.value)}/>\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='py-3'>\n                        <button className='btn btn-sm btn-mdb-color' type='submit' onClick={onSubmit}\n                                onSubmit={onSubmit}>Войти\n                        </button>\n                    </div>\n                </form>\n            }\n            {isLoading ?\n                <Loader message={'Ожидание ответа сервера...'}/> : null\n            }\n            <p className='mt-3 text-danger'>{wasError}</p>\n\n        </section>\n    );\n};\n\nexport default Login;\n","import React, {useState, useEffect} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// import UserContext from '../UserContext';\nimport Loader from '../../common/loader/Loader';\n\nconst Logout = () => {\n    const [wasError, setWasError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n\n    useEffect(()=> {\n        const logout = () => {\n            setIsLoading(true);\n            setWasError(null);\n\n            firebase.auth().signOut().then(() => {\n                // setUser(null);\n                setIsLoading(false);\n            }).catch(error => {\n                setWasError(error.message);\n                setIsLoading(false);\n            });\n        };\n        logout();\n    }, []);\n\n\n    return (\n        isLoading ?\n            <Loader message={'Ожидание ответа сервера...'}/> :\n            <p className='mt-3 text-danger'>{wasError}</p>\n    );\n};\n\nexport default Logout;\n","import React, {useState} from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Loader from '../../common/loader/Loader';\n\nconst Register = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [wasError, setWasError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n\n    const updateCurrentProfile = (displayName) => {\n        setIsLoading(true);\n        setWasError(null);\n        const user = firebase.auth().currentUser;\n        if (user) {\n            user.updateProfile({\n                displayName: displayName\n            }).then(() => {\n                // Update successful.\n                setWasError('Зарегистрирован пользователь' + displayName);\n                setIsLoading(false);\n            }).catch((error) => {\n                setWasError(error.message);\n                setIsLoading(false);\n            });\n        }\n    };\n\n    const register = async (regData) => {\n        setIsLoading(true);\n        setWasError(null);\n        try {\n            const user = await firebase.auth().createUserWithEmailAndPassword(regData.email, regData.password);\n            setWasError('Зарегистрирован: ' + user.user.uid);\n            setIsLoading(false);\n            updateCurrentProfile(regData.displayName);\n        } catch (err) {\n            setWasError(err.message);\n            setIsLoading(false);\n        }\n    };\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        if (email.trim() !== '' && password.trim() !== '') {\n            register({email, password, displayName: name});\n        } else {\n            setWasError('Необходимо заполнить e-mail, пароль и имя');\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <section className='col-12 col-md-6 py-3 justify-content-center container'>\n                <h2 className='text-center'>Регистрация</h2>\n                <form\n                    className='needs-validation mx-auto col-11 p-3 white mdb-color-text rounded shadow-lg text-center'\n                >\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='name'>Имя</label>\n                        <input className='form-control'\n                               type='text' name='name' placeholder='Имя' id='name' required\n                               value={name} onChange={(evt) => setName(evt.target.value)}/>\n\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='email'>E-mail</label>\n                        <input className='form-control'\n                               type='email' name='email' placeholder='E-mail' id='email' required\n                               value={email} onChange={(evt) => setEmail(evt.target.value)}/>\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='password'>Пароль</label>\n                        <input className='form-control'\n                               type='password' name='password' placeholder='Пароль' id='password' required\n                               value={password} onChange={(evt) => setPassword(evt.target.value)}/>\n\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <button className='btn btn-mdb-color btn-sm' type='submit' onClick={onSubmit}\n                            onSubmit={onSubmit}>\n                        Зарегистрироваться\n                    </button>\n                </form>\n                {isLoading ?\n                    <Loader message={'Ожидание ответа сервера...'}/> :\n                    <p className='mt-3 text-danger'>{wasError}</p>\n                }\n\n            </section>\n        </React.Fragment>\n    );\n};\n\nexport default Register;\n","import React, {useContext} from 'react';\n\nimport UserContext from '../UserContext';\nimport SimpleTable from '../../common/simpletable/SimpleTable';\n\nconst Profile = () => {\n    const {authUser} = useContext(UserContext);\n    return (\n        <React.Fragment>\n            <h4>Профиль пользователя</h4>\n            {authUser ?\n                <SimpleTable details={authUser}/> :\n                <p>Просмотр профиля возможен только для залогиненного пользователя</p>\n            }\n        </React.Fragment>\n    );\n};\n\nexport default Profile;","import React from 'react';\n\nconst Disabled = () => (<button className='btn btn-mdb-color btn-sm' disabled>временно отключено</button>);\n\nexport default Disabled;","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {wasError: false};\n    }\n\n    componentDidCatch() {\n        this.setState({wasError: true});\n    }\n\n    render() {\n        if (this.state.wasError) {\n            return (\n                <div className='alert alert-primary'>\n                    <h4>Произошла ошибка...</h4>\n                    <p>{this.props.message}</p>\n                </div>\n            );\n        } else {\n            return (this.props.children);\n        }\n    }\n\n    static defaultProps = {\n        message: 'Часть функциональности отключена. Возможная причина - недоступность карт.'\n    };\n}\n\nexport default ErrorBoundary;","import React from 'react';\n\nimport AppChart from './appchart/AppChart';\nimport AppTable from './apptable/AppTable';\nimport AppMap from './appmap/AppMap';\nimport AppMain from './appmain/AppMain';\nimport AppFirebase from './appfirebase/AppFirebase';\nimport Login from './appfirebase/login/Login';\nimport Logout from './appfirebase/logout/Logout';\nimport Register from './appfirebase/register/Register';\nimport Profile from './appfirebase/profile/Profile';\nimport Disabled from './common/Disabled';\nimport ErrorBoundary from './errorboundary/ErrorBoundary';\nimport {DISABLED_COMPONENTS, MAP_TYPES} from './constants';\n\nexport const routes = {\n    '/': () => <AppMain/>,\n    '/chart': () => <AppChart/>,\n    '/table': () => <AppTable/>,\n    '/mapyandex': () => (DISABLED_COMPONENTS.indexOf(MAP_TYPES.YANDEX) >= 0 ?\n        <Disabled/> :\n        <ErrorBoundary> <AppMap mapType={MAP_TYPES.YANDEX} mapInit={null} geoInit={null}/> </ErrorBoundary>),\n    '/map2gis': () => (DISABLED_COMPONENTS.indexOf(MAP_TYPES.GIS) >= 0 ?\n        <Disabled/> :\n        <ErrorBoundary> <AppMap mapType={MAP_TYPES.GIS} mapInit={null} geoInit={null}/> </ErrorBoundary>),\n    '/firebase': () => <ErrorBoundary message={'Что-то не то с Firebase получилось.'}><AppFirebase/></ErrorBoundary>,\n    '/login': () => <Login/>,\n    '/register': () => <Register/>,\n    '/profile': ()=> <Profile/>,\n    '/logout': ()=> <Logout/>\n};\n\n","import React from 'react';\nimport DropDown from './dropdown/DropDownHook';\nimport {navigate} from 'hookrouter';\nimport {getAuthUserProperty} from '../appfirebase/firebasefunctions';\n\nconst getUserMenuItems = (user) => {\n    const items = [\n        {key: '/register', link: '/register', text: 'Регистрация', hidden: !!(user)},\n        {key: '/login', link: '/login', text: 'Вход', hidden: !!(user)},\n        {key: '/profile', link: '/profile', text: 'Профиль', hidden: !(user)},\n        {key: '/logout', link: '/logout', text: 'Выход', hidden: !(user)}\n    ];\n    return items.filter(item => !item.hidden);\n};\n\n\nconst UserMenu = ({user}) => {\n    const data = getUserMenuItems(user);\n    const userMenuCallBack = (href) => navigate(href);\n\n    return (\n        <div className='d-flex justify-content-center'>\n            <DropDown data={data} togglerText={getAuthUserProperty(user)} callback={userMenuCallBack} routerLink={true}\n                      css={{\n                          togglerCss: 'btn dropdown-toggle btn-sm btn-mdb-color',\n                          linkCss: 'dropdown-item'\n                      }}/>\n        </div>\n    );\n};\n\nexport default UserMenu;","import React, {useContext} from 'react';\nimport {A, useRoutes} from 'hookrouter';\n\nimport UserContext from './appfirebase/UserContext';\n\nimport NotFound from './common/NotFound';\nimport {TASKS, TASKS_ORDER} from './constants';\nimport {routes} from './routes';\nimport {taskSearch, getAClassName} from './functions';\nimport UserMenu from './common/UserMenu';\n\nconst AppSwitcher = () => {\n    const routeResult = useRoutes(routes);\n    const task = taskSearch(window.location.pathname);\n    const {authUser} = useContext(UserContext);\n\n    return (\n        <React.Fragment>\n            <header>\n                <h3 className='h3-responsive text-center'>Разные задачи c использованием React</h3>\n                {TASKS_ORDER.map((item, ind) =>\n                    <A href={TASKS_ORDER[ind]['href']}\n                       className={getAClassName(TASKS_ORDER[ind].href)}\n                       key={ind}\n                       title={TASKS_ORDER[ind]['comment']}>{TASKS_ORDER[ind]['title']}\n                    </A>\n                )}\n                <UserMenu user={authUser}/>\n            </header>\n            <hr/>\n            <p><small>{TASKS[task]['comment']}</small></p>\n            <hr/>\n            {routeResult || <NotFound/>}\n        </React.Fragment>\n    );\n};\n\nexport default AppSwitcher;","import React, {useState, useEffect} from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport UserContext from './appfirebase/UserContext';\nimport {getUser} from './appfirebase/firebasefunctions';\nimport AppSwitcher from './AppSwitcher';\n\nimport {firebaseConfig} from './config';\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\nconst App = () => {\n    const [authUser, setUser] = useState(null);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((user) => setUser(getUser(user)));\n    }, []);\n\n    return (\n        <UserContext.Provider value={{authUser, setUser}}>\n            <div className=\"container py-3\">\n                <div className='col-12 col-md-10 mx-auto text-center'>\n                    <main>\n                        <AppSwitcher/>\n                    </main>\n                </div>\n            </div>\n        </UserContext.Provider>\n    );\n};\n\nexport default App;\n","export const firebaseConfig = ({\n    apiKey: \"AIzaSyAN5_Xz0XnBbhb_nPpIIPqwjfx6gkKgka8\",\n    authDomain: \"rtasks-cacd5.firebaseapp.com\",\n    databaseURL: \"https://rtasks-cacd5.firebaseio.com\",\n    projectId: \"rtasks-cacd5\",\n    storageBucket: \"\",\n    messagingSenderId: \"174032355886\",\n    appId: \"1:174032355886:web:8083a21142eed1dd4895bf\"\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport './mdbcss/bootstrap.min.css';\nimport './mdbcss/mdb.min.css';\nimport './index.css';\n\nimport {APP_ROOT} from './constants';\nimport {setBasepath} from 'hookrouter';\nsetBasepath(APP_ROOT);\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.0d9b647f.svg\";"],"sourceRoot":""}