{"version":3,"sources":["serviceWorker.js","appfirebase/UserContext.js","constants.js","functions.js","appfirebase/firebasefunctions.js","common/NotFound.jsx","common/loader/Loader.jsx","common/dropdown/DropDownHook.jsx","appchart/chartconstants.js","appchart/chartfunctions.js","appchart/chart/SimpleChart.jsx","common/simpletable/ArrayRowCells.jsx","common/simpletable/DraggableArrayRow.jsx","common/simpletable/SimpleArrayRow.jsx","common/simpletable/SimpleTable.jsx","common/details/Details.jsx","appchart/form/GitUserForm.jsx","appchart/AppChart.jsx","common/compoundtable/tableconstants.js","common/compoundtable/table/Table.jsx","common/compoundtable/filter/Filter.jsx","common/compoundtable/tablefunctions.js","common/compoundtable/table/TableWrapper.jsx","apptable/tableconstants.js","apptable/AppTable.jsx","appmap/mapfunctions.js","appmap/mapconstants.js","appmap/MapYandex.jsx","appmap/Map2Gis.jsx","appmap/mapform/MapForm.jsx","appmap/AppMap.jsx","appmain/AppMain.jsx","appfirebase/fireconstants.js","appfirebase/candy/Card.jsx","appfirebase/candy/CardContainer.jsx","appfirebase/candy/sidenav/SidenavSwitcher.jsx","appfirebase/candy/sidenav/Darken.jsx","appfirebase/candy/catalogfilter/CatalogFilterComponents.jsx","appfirebase/candy/catalogfilter/CatalogFilter.jsx","appfirebase/candy/sidenav/Sidenav.jsx","appfirebase/candy/Catalog.jsx","appfirebase/AppFirebase.jsx","appfirebase/login/Login.jsx","appfirebase/logout/Logout.jsx","appfirebase/register/Register.jsx","appfirebase/profile/Profile.jsx","common/Disabled.jsx","errorboundary/ErrorBoundary.jsx","routes.js","common/UserMenu.jsx","AppSwitcher.jsx","App.js","config.js","index.js","common/loader/logo.svg"],"names":["Boolean","window","location","hostname","match","React","createContext","KEYCODES","MAP_TYPES","DISABLED_COMPONENTS","url","origin","DATA_ROOT","APP_ROOT","TASKS","MAIN","title","component","comment","href","TABLE","CHART","MAP_YANDEX","additionalParam","MAP_2GIS","FIREBASE","TASKS_ORDER","Object","keys","map","key","filter","task","indexOf","CONTROL_BUTTON_TYPES","DELETE","icon","UP","DOWN","DND_TYPES","getButtonTypeClass","buttonType","getInlineSvg","name","width","height","fillColor","strokeColor","xmlns","viewBox","fill","stroke","d","version","id","getUser","user","displayName","uid","email","getAuthUserProperty","property","getRowMapResult","row","fields","obj","forEach","field","defaultValue","getField","data","fieldname","getDataWithId","source","result","length","Array","isArray","ind","NotFound","className","Loader","message","src","logo","witdh","alt","LinkDrop","link","css","clickHandler","linkCss","onClick","text","ButtonDrop","type","DropDown","togglerText","ariaInfo","dropdownSet","callback","routerLink","togglerCss","useState","isOpen","setIsOpen","toggleContainer","useRef","timeOutId","dropOpenedClass","links","useEffect","document","addEventListener","onClickOutsideHandler","onKeyPress","removeEventListener","onButtonClickHandler","onRouterLinkClickHandler","evt","current","contains","target","keyCode","preventDefault","ref","onBlur","setTimeout","onFocus","clearTimeout","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","GIT_URLS","PHPTEST","reposUrl","userUrl","TEST","CHART_COLORS","CHART_TYPES","BAR","PIE","DOUGHNUT","GIT_TYPES","GIT_LINK_PARTS","CHART_CANVAS","isDigit","str","getIsAcademy","includes","parseRepoInfo","repo","isAcademy","html_url","parsedName","academyId","project","intensiveNumber","splitted","split","join","first","rest","middle","slice","last","parseName","description","homepage","language","transformUserData","login","toLowerCase","reposCount","public_repos","profile","transformReposData","item","getTotals","content","totalField","totals","fieldName","getPreparedData","labels","label","getTotalsField","getTotalDetails","details","uniqueIdCount","repos","v","i","a","aboutId","chart","SimpleChart","chartTitle","chartFooter","onLegendClick","hidden","chartType","setChartType","canvas","chartData","sourceData","colors","datasets","backgroundColor","borderColor","color","substring","lastIndexOf","borderWidth","options","scales","yAxes","ticks","beginAtZero","parseInt","transformToChartData","drawChart","operations","ctx","getContext","destroy","Chart","assign","ArrayRowCells","element","controls","rowInd","Fragment","control","colInd","Control","getControl","DraggableArrayRow","moveRow","dragRef","useDrop","accept","hover","monitor","drop","useDrag","end","drag","SimpleArrayRow","DetailsHeader","ArrayRows","draggableRows","ObjectRows","columns","SimpleTable","noHeader","Details","props","onKeyDown","unsetDetails","Component","GitUserForm","onGitUserClick","inputValue","setInputValue","trim","value","pattern","placeholder","onChange","getPagesUrls","tmpUser","isGitData","pages","totalCount","totalPages","Math","ceil","repoUrl","push","AppChart","isLoading","setIsLoading","setContent","wasError","setWasError","currentDetails","setCurrentDetails","onError","errorMessage","getData","canceled","fetch","then","response","json","userData","Promise","all","page","results","jointData","catch","error","makePdfOperation","needOpen","pdfMake","getElementById","canvasURL","toDataURL","docDefinition","totalDetails","ul","sort","b","pdfContent","Date","toLocaleString","margin","fontSize","alignment","image","layout","table","widths","body","pageSize","pageOrientation","header","bold","footer","currentPage","pageCount","toString","createPDFDefinition","createPdf","open","download","role","aria-label","userName","something","getDetailsFields","filterField","reduce","rv","SORT_DIRECTIONS","SortIndicator","currentColumn","sortField","sortDirection","onDirectionChange","arrow","aria-hidden","TableRow","onRowClick","pseudoId","column","Table","onTableSort","noData","cellSpacing","previousLabel","nextLabel","breakLabel","onPageChange","paginationPage","selected","forcePage","containerClassName","pageClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Filter","onFilterApply","htmlFor","containsPattern","itemObject","TableWrapper","filterValue","setFilterValue","setCurrentPage","setSortField","setSortDirection","preparedData","chunk","getRowClickComponent","undefined","orderBy","rowData","DATA_URLS","SMALL","BIG","defaultSortDirection","AppTable","stateReset","defaultSortField","getPlacemarkTitle","coords","toFixed","DELIMITER","getHtmlIcon","DEFAULT_POINT","DEFAULT_POINTS","POINT_TEXT","GEO_REG_EXP","YANDEX_PLACEMARK_PRESETS","START_POINT","COMMON_POINT","MapYandex","setMap","geoCollection","setGeoCollection","points","onChangeMarkerCoords","ymaps","ready","mapa","Map","center","zoom","behaviors","disable","remove","geo","GeoObjectCollection","preset","strokeWidth","geodesic","geoObjects","add","onMarkerDragEnd","e","get","placemarkCoords","fromGlobalPixels","converter","pageToGlobal","getZoom","removeAll","point","marker","GeoObject","geometry","coordinates","properties","iconContent","hintContent","draggable","isMarker","getYmapsPoint","events","polyline","getYMapsRoute","refreshMap","Map2Gis","DG","featureGroup","addTo","lat","_latlng","lng","eachLayer","layer","clearAllEventListeners","removeLayer","divIcon","html","on","weight","opacity","ControlButton","MapForm","routePoints","onAddPoint","onDeletePoint","onUp","onDown","setWasInput","required","backend","HTML5Backend","AppMap","mapType","mapInit","geoInit","setRoutePoints","showSidebar","setShowSidebar","delIndex","index","newPointCoords","getCenter","getCenterByMapType","sourceArr","arr","moved","shift","moveUp","pop","moveDown","dragIndex","hoverIndex","draggedPoint","update","$splice","newCoords","find","AppMain","FIREBASE_URL_TYPE","FIREBASE_URL","FIELDS_LIST","STARS","Stars","starsAmount","voiceAmount","max","min","stars","starsEmpty","star","Rating","rating","sourceNumber","textForms","temporaryNumber","abs","getTextForm","Composition","composition","nutritionFacts","contents","energy","sugar","gluten","vegetarian","getComposition","Image","picture","CardError","style","minHeight","Card","showComposition","maxWidth","kind","top","right","borderRadius","price","amount","CardContainer","rowDetails","setRowDetails","axios","timeout","SidenavSwitcher","isSidenavOpen","switchSidenav","Darken","switchMethod","noToggleContainer","position","left","bottom","zIndex","ok","children","RUSSIAN_TITLES","Kinds","kinds","onCheckBoxClick","selectAll","unSelectAll","checked","TextForm","setText","disabled","FilterButtons","apply","reset","cancel","CatalogFilter","filterData","applyFilter","setKinds","facts","setFacts","changeSelected","setObj","newObj","fact","newKinds","newFacts","Sidenav","FILTER_OPTION_TYPES","getFilterOptions","optionType","option","getFilteredCatalog","catalog","filteredCatalog","elem","prop","Catalog","closeCatalog","setIsSidenavOpen","setFilterData","filteredData","setFilteredData","prices","getSubHeader","newFilterData","CurrentComponent","showCatalog","AppFirebase","setCatalog","setShowCatalog","url_type","firebase","database","once","val","navigator","onLine","Login","setEmail","password","setPassword","authUser","useContext","UserContext","onSubmit","regData","auth","signInWithEmailAndPassword","autoComplete","Logout","signOut","Register","setName","updateCurrentProfile","currentUser","updateProfile","register","createUserWithEmailAndPassword","Profile","Disabled","ErrorBoundary","state","this","setState","defaultProps","routes","UserMenu","getUserMenuItems","navigate","AppSwitcher","routeResult","useRoutes","entries","taskSearch","pathname","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","setUser","onAuthStateChanged","Provider","setBasepath","ReactDOM","render","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7f98b0d8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport default  React.createContext(null);","export const KEYCODES = {\n    ENTER: 13,\n    ESC: 27\n};\n\nexport const MAP_TYPES = {\n    YANDEX: 'YANDEX',\n    GIS: '2GIS'\n};\n\nexport const DISABLED_COMPONENTS = [MAP_TYPES.YANDEX];\n\nconst url = window.location.origin;\nexport const DATA_ROOT = (url.match(/github\\.io/gi)) ? '' : '';\nexport const APP_ROOT = ((url.match(/github\\.io/gi)) ? '/rtasks' : '');\n\nexport const TASKS = {\n    MAIN: {\n        title: 'главная',\n        component: null,\n        comment: 'Тренировка на котиках. React (hooks) - CRA, react-paginate, lodash, chart.js, MDB, API карт, React-DnD, Firebase, hookrouter',\n        href: '/'\n    },\n    TABLE: {\n        title: 'таблица с данными', component: 'AppTable',\n        comment: 'Получение данных, сортировка, фильтрация, пагинация, вывод детальной информации по строке таблицы.',\n        href: APP_ROOT + '/table'\n    },\n    CHART: {title: 'ChartJS', component: 'AppChart', comment: 'Диаграмма, вывод детальной информации. API GitHub, promise', href: '/chart'},\n    MAP_YANDEX: {title: 'карта Yandex', component: 'AppMap', comment: 'Карта c маршрутом. API Yandex-карт, React-DnD', additionalParam: MAP_TYPES.YANDEX,\n        href: APP_ROOT + '/mapyandex'},\n    MAP_2GIS: {title: 'карта 2Gis', component: 'AppMap', comment: 'Карта c маршрутом. API 2Gis, React-DnD', additionalParam: MAP_TYPES.GIS,\n        href: APP_ROOT + '/map2gis'},\n    FIREBASE: {title: 'Firebase', component: 'AppFirebase', comment: 'Firebase (регистрация, аутентификация, получение данных). Axios, async/await',\n        href: APP_ROOT + '/firebase'}\n};\n\nexport const TASKS_ORDER = [...Object.keys(TASKS).map(key => TASKS[key])].filter(\n    task => !(task.additionalParam) || (DISABLED_COMPONENTS.indexOf(task.additionalParam) === -1));;\n\nexport const CONTROL_BUTTON_TYPES = {\n    DELETE: {title: 'удалить', icon: '\\u{2718}'},\n    UP: {title: 'вверх', icon: '\\u{2B06}'},\n    DOWN: {title: 'вниз', icon: '\\u{2B07}'}\n};\n\nexport const DND_TYPES = {\n    ROW: 'ROW'\n};\n\nexport const MDB_COLOR='#59698d';","import React from 'react';\nimport {CONTROL_BUTTON_TYPES, TASKS} from './constants';\n\nexport const moveDown = (sourceArr, ind) => {\n    if (sourceArr.length <= 1) {\n        return sourceArr;\n    }\n    const arr = [...sourceArr];\n    if (ind !== arr.length - 1) {\n        [arr[ind], arr[ind + 1]] = [arr[ind + 1], arr[ind]];\n        return arr;\n    }\n    const moved = arr.pop();\n    return [moved, ...arr];\n};\n\nexport const moveUp = (sourceArr, ind) => {\n    if (sourceArr.length <= 1) {\n        return sourceArr;\n    }\n    const arr = [...sourceArr];\n    if (ind !== 0) {\n        [arr[ind], arr[ind - 1]] = [arr[ind - 1], arr[ind]];\n        return arr;\n    }\n    const moved = arr.shift();\n    return [...arr, moved];\n};\n\nexport const getButtonTypeClass = (buttonType) => (buttonType === CONTROL_BUTTON_TYPES.DELETE ? ' btn-primary ' : ' btn-mdb-color ');\n\nexport const getInlineSvg = (name, width = 20, height = 20, fillColor = 'white', strokeColor = 'white') => {\n    switch (name) {\n        case 'roger':\n            return (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 300 300\" width={width} height={height}\n                     fill={fillColor} stroke={strokeColor}>\n                    <g>\n                        <path\n                            d=\"M4.3 55C2.5 56.1 1 57.2 1 57.4c0 .2 2.9 1.4 6.4 2.6 23.4 7.8 36.6 32.2 39.8 73.8 1.7 21.8-.6 42.2-6.8 61.7-4.3 13.3-17.4 34.3-27.3 44-2.3 2.1-4.1 4.2-4.1 4.6 0 .4 2.6-.1 5.7-1.1 12.1-3.7 19-4.4 28.6-2.7C59 243 64 240.1 68.5 226c1.8-5.7 4.5-9.9 4.5-7 0 .8-.7 4.2-1.5 7.5s-1.4 7.1-1.5 8.5v2.4l1.6-2.2c2.3-3.4 3.4-2.7 3.4 2.2 0 2.5.5 4.8 1 5.1 2.7 1.7 23.3 4.5 32.5 4.5 11.2 0 27.3-2.6 40.6-6.4 4.6-1.4 20.4-7.4 35.1-13.5 37.3-15.3 49.4-18.8 69.3-19.7 12.6-.6 23.3.8 29.7 4.1 4 2 4.3 1.9 5.6-.7.9-1.9 1.1-1.3 1.1 3.8.1 5.3-.3 6.5-2.4 8.6-1.4 1.4-4 3.3-5.8 4.2l-3.2 1.7 4-.6c6.8-1 12.8-4.6 14.8-8.7 3.9-8 3-22-2-27.8-4.2-5.1-7.6-6.2-21.5-7.2-7-.4-14-1.4-15.5-2-2.6-1.1-2.2-1.2 4.9-1.9 4.2-.3 9.3-1.5 11.5-2.5 3.3-1.6 3.8-2.4 4.1-5.7.2-2.1-.6-8.7-1.7-14.7-3-15.5-5.1-32.2-5.1-40.6 0-7.2 0-7.2-3.5-9.3-4.3-2.5-4.4-3.6-.2-5.1 2.9-1 3-1.2 1.5-2.4-2.6-1.9-2.2-2.6 1.6-2.6h3.4l-.1-18.3c0-10 .2-19.1.4-20.2 1.1-5.2-27.8-7.8-45.1-4.2-4.7 1-15 4.1-23 6.8-34.8 12-40.8 13.8-50.8 14.8-12.6 1.3-38.3-.1-63.6-3.5-10.4-1.3-19.4-2.3-20-2.1-.7.2-1.1 4.7-1.1 13.3 0 8.2-.5 13.6-1.2 14.9-1 1.6-1.2.2-1.3-8.2 0-11.2-1.4-19.5-3.5-21.3-1.1-.9-1.2-.4-.8 2.8.3 2.4.1 4.2-.6 4.6-.6.4-1.1.2-1.1-.4 0-2.6-5.4-9.1-9.6-11.6-6-3.5-19.5-8-31.3-10.5-11.7-2.4-13.8-2.4-17.8.1zM199 87.5c1.6.8 3.5 2.4 4.3 3.5 1.4 2 1.4 2 5.8-.5 9-5.1 19.6-2.5 22 5.4 1.1 3.6 1 4.5-1.2 8.7-3.4 6.7-7.5 8.7-16.2 8-6.6-.5-7-.4-11.8 3l-4.9 3.6 3.5 4.1c4.4 5.1 7.9 12.4 9.5 19.9 1.6 7.3.2 15.2-3.8 21.1-1.5 2.3-3.1 4.7-3.5 5.4-.5.8.9 1.9 3.9 3.2 2.6 1.2 4.8 2.1 4.9 2.1.2 0 .6-1.1.9-2.4.3-1.3 2.2-3.8 4.1-5.5 2.9-2.5 4.5-3.1 8.1-3.1 3.9 0 5.1.5 7.9 3.3 3.1 3.1 5.5 8.8 5.5 13 0 7.7-10.6 13.1-19.4 9.7-2.5-.9-2.6-.8-2.6 2.8 0 6.7-5 11.3-10 9.2-4.4-1.8-6.4-8.9-4-14.5.6-1.6-.1-2.9-3.3-6.3-2.3-2.3-4.4-4.2-4.8-4.2-.4 0-2.5 1-4.8 2.3l-4 2.3 2.9 4.5c1.7 2.4 3 4.7 3 5.2 0 .8-4.1 2.6-8.1 3.4-2.5.5-2.8.1-4.4-4.6-.9-2.8-2.1-5.1-2.6-5.1-1.3 0-1.2 1 1.1 7.5 1.1 3.2 1.9 5.9 1.8 6-.6.5-9.8 2.5-11.2 2.5-1.2 0-1.6-1.5-1.8-6.7-.2-4.4-.7-6.8-1.6-7.1-1.1-.3-1.2 1.2-.6 7.8l.7 8.1-6.4-.7c-3.5-.4-6.6-.8-6.7-1-.2-.1 0-3.4.5-7.3.7-5.4.6-7.1-.3-7.1-.7 0-1.5 2.3-1.9 6.1-.7 5.6-.9 6-2.9 5.5-1.1-.3-3.8-.9-5.8-1.2-2.1-.4-3.8-.8-3.8-1.1 0-.2.7-2 1.5-4 .8-1.9 1.5-4.1 1.5-4.8 0-.7-3.3-2.4-7.2-3.8l-7.3-2.6-4.1 4-4.1 4 3.5 3.5c3.1 3.1 3.4 3.9 2.9 7.2-.8 4.7-5.5 9.2-9.8 9.2-4 0-7.9-3.9-7.9-7.9v-3l-3.5 1.5c-5.1 2.1-11.7 1.8-14.9-.7-5.7-4.5-6.9-10.4-3.6-16.9 5.1-9.9 19.3-12.6 24.6-4.5l1.5 2.4 3.5-2.1 3.4-2-3.3-3.8c-8.1-8.8-8.9-20.8-2.4-34.4 2.1-4.4 3.4-8.2 3-8.6-.4-.4-2.6-1.9-4.7-3.3l-3.9-2.6-1.8 2.3c-4 5.1-16 5.5-20.4.6-4.4-4.9-2.4-15.9 3.7-20.4 3.1-2.2 11-2.6 14.6-.7 1.8.9 2.1.7 3.1-2.1 2.3-6.6 7-8.6 11.9-5.2 3 2.1 3.1 8.8.1 12l-2.1 2.2 3.2 4.7 3.2 4.6 6.6-6.3c7.9-7.6 11.8-10.1 19.1-12.2 6.4-1.9 12-2 19.3-.5 5.9 1.3 16.3 5.7 20.7 8.8 1.6 1.2 3.1 2.1 3.4 2.1.3 0 1.2-1.9 2-4.3 1.4-4.2 1.4-4.4-1.4-7.5-2.1-2.4-2.9-4.3-2.9-7 0-4.2.6-5.4 3.5-7 2.7-1.5 4.1-1.5 7.5.3z\"/>\n                        <path\n                            d=\"M132.8 118c-7 3.8-15.5 17-16.4 25.8-.7 5.9 2.4 12.2 7.9 16.6 2.9 2.4 5 3.1 9.7 3.4 8 .6 14.1-2.3 18.2-8.7 2.8-4.3 2.9-5.1 2.6-12.8-.4-6.8-1-9.2-3.9-15-3.5-7-8.2-11.3-12.3-11.3-1.2.1-3.8 1-5.8 2zm16.7 19.3c3.5 5.5 2.2 14.7-2.4 16.2-6.6 2.1-10.8-10.8-5.4-16.7 2.2-2.5 5.9-2.3 7.8.5zM168.8 123.3c-4.6 4.3-4.8 17.5-.5 25.2 5.7 10.1 23.3 11.5 29.9 2.5 2.4-3.2 3.2-8.6 2.4-14.5-.6-3.4-1.6-5.4-4.3-8-7.3-7.1-22.4-9.9-27.5-5.2zm6 14.9c1.9 1.9 1.4 7.3-.7 9.2-1.8 1.7-2 1.7-4-.3-2.3-2.3-2.7-5.2-1.1-8.2 1.2-2.1 4-2.5 5.8-.7zM162.2 159.2c-1.9 1.9-1.4 9.5.8 13.8 1.8 3.5 2.5 4 5.4 4 1.9 0 4.4-.8 5.6-1.8 3.3-2.6 2.1-8-2.9-13.2-3.9-4.1-6.7-5-8.9-2.8zM154.6 163.2c-3.5 5.3-3.9 12.2-.8 11.6 3.3-.6 5.5-9.2 3.3-12.7-.7-1.1-1.2-.8-2.5 1.1z\"/>\n                    </g>\n                </svg>);\n        case 'rtasks':\n            return (\n                <svg version=\"1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={width} height={height}\n                     fill={fillColor} stroke={strokeColor}>\n                    <path d=\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"/>\n                </svg>\n            );\n         case 'select':\n            return (\n                <svg version=\"1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={width} height={height}\n                     fill={fillColor} stroke={strokeColor}>\n                    <path d=\"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"/>\n                </svg>\n            );\n         case 'unselect':\n            return (\n                <svg version=\"1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={width} height={height}\n                     fill={fillColor} stroke={strokeColor}>\n                    <path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"/>\n                </svg>\n            );\n\n        default:\n            return (<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"default\" viewBox=\"0 0 17 13\" width={width} height={height}\n                         fill={fillColor} stroke={fillColor}></svg>);\n    }\n};\n\nexport const taskSearch = (href) => {\n  const result = Object.entries(TASKS).find(task => task[1].href === href);\n  return Array.isArray(result)  ? result[0] : 'MAIN';\n};\n\nexport const getAClassName = (href) => (\n    'btn btn-sm ' + (href === window.location.pathname ? '' : ' btn-mdb-color ')\n);\n\nexport const getColumns = (data) => {\n   return Array.isArray(data) && data.length > 0 ? Object.keys(data[0]) : [];\n}","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport {getColumns} from '../functions';\n\nexport const getUser = (user) => {\n    return user ? ({\n        displayName: user.displayName,\n        uid: user.uid,\n        email: user.email\n    }) : null;\n};\n\nexport const getCurrentUserInfo = () => getUser(firebase.auth().currentUser);\n\nexport const getAuthUserProperty = (user, property = 'displayName') => (\n    user ? user[property] : 'Гость'\n);\n\nexport const getRowMapResult = (row, fields) => {\n    const obj = {};\n    fields.forEach(field => (\n        obj[field.name] = row[field.name] ? row[field.name] : field.defaultValue));\n    return (obj);\n};\n\n/**\n * Candy\n */\nexport const getComposition = function (nutritionFacts) {\n    const composition = {contents: '-', properties: '-', energy: '-'};\n    if (nutritionFacts) {\n        composition.contents = nutritionFacts.contents ? nutritionFacts.contents + '.' : '';\n        composition.properties = '' + (nutritionFacts.sugar ? 'C сахаром, ' : 'Без сахара, ') +\n            (nutritionFacts.gluten ? 'c глютеном, ' : 'без глютена, ') +\n            (nutritionFacts.vegetarian ? 'вегетаринское. ' : 'не вегетаринское. ');\n        composition.energy = nutritionFacts.energy ? nutritionFacts.energy : 'нет данных';\n    }\n    return composition;\n};\n\nexport const getField = (data, fieldname, defaultValue = '-') => (\n    data && data[fieldname] ? data[fieldname] : defaultValue\n);\n\nexport const getDataWithId = (source) => {\n    const result = [...source];\n    if (result.length > 0) {\n        const columns = getColumns(result);\n        if (columns.indexOf('id') === -1) {\n            result.forEach((row, ind) => {\n                row['id'] = ind;\n            });\n        }\n    }\n    return result;\n};\n\nexport const getTextForm = (sourceNumber, textForms) => {\n    sourceNumber = Math.abs(sourceNumber) % 100;\n    let temporaryNumber = sourceNumber % 10;\n    if (sourceNumber > 10 && sourceNumber < 20) {\n        return textForms[2];\n    }\n    if (temporaryNumber > 1 && temporaryNumber < 5) {\n        return textForms[1];\n    }\n    if (temporaryNumber === 1) {\n        return textForms[0];\n    }\n    return textForms[2];\n};","import React, {Fragment} from 'react';\n\nimport {getInlineSvg} from '../functions';\nimport {MDB_COLOR} from '../constants';\n\nconst NotFound = () => (\n    <Fragment>\n            <h1 className=\"visually-hidden\">404</h1>\n            <div className=\"row\">\n                <section className=\"col-12 col-md-6 text-center py-2 mx-auto\">\n                    {getInlineSvg('roger', 120, 120, MDB_COLOR, MDB_COLOR)}\n                    <p className=\"h4-responsive\" title=\"Страница не найдена\">\n                        Ошибка 404. Запрошенная страница не найдена.\n                    </p>\n                </section>\n            </div>\n    </Fragment>\n);\n\nexport default NotFound;\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './loader.css';\n\nconst Loader = ({message = 'Данные загружаются...'}) => (\n     <div className='mx-auto'>\n        <img  className='loader' src={logo}  witdh='80' height='80' alt='logo' />\n        <small className='mdb-color-text'>{message}</small>\n    </div>\n);\n\nexport default Loader;","import React, {useState, useRef, useEffect} from 'react';\r\nimport {KEYCODES} from '../../constants';\r\n\r\nconst LinkDrop = ({link, css, clickHandler}) => (\r\n    <a className={css.linkCss}\r\n       href={link.href} onClick={clickHandler}\r\n       key={link.key}>\r\n        {link.text}\r\n    </a>\r\n);\r\n\r\nconst ButtonDrop = ({link, css, clickHandler}) => {\r\n    return (\r\n        <button className={css.linkCss}\r\n                type='button' onClick={() => clickHandler(link.key)}\r\n                key={link.key}>\r\n            {link.text}\r\n        </button>\r\n    );\r\n};\r\n\r\n/**\r\n * для передачи в props DropDown нужно подготовить массив объектов вида\r\n * {key: 'key', link: 'link', text: 'text'}\r\n */\r\nconst DropDown = ({\r\n                      data = [], togglerText = 'перейти...', ariaInfo = 'dropdown', dropdownSet = [],\r\n                      callback = null, routerLink = false,\r\n                      css = {\r\n                          togglerCss: 'btn dropdown-toggle btn-block',\r\n                          linkCss: 'dropdown-item w-100'\r\n                      }\r\n                  }) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggleContainer = useRef(null);\r\n    let timeOutId = null;\r\n    const dropOpenedClass = isOpen ? ' show ' : '';\r\n    const links = Array.isArray(data) ? data : [];\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', onClickOutsideHandler);\r\n        document.addEventListener('keydown', onKeyPress);\r\n        return () => {\r\n            document.removeEventListener('click', onClickOutsideHandler);\r\n            document.removeEventListener('keydown', onKeyPress);\r\n        };\r\n    });\r\n\r\n    const onClickHandler = () => setIsOpen(!isOpen);\r\n\r\n    const onButtonClickHandler = (key) => {\r\n        if (callback) {\r\n            setIsOpen(false);\r\n            callback(dropdownSet[key]);\r\n        }\r\n    };\r\n\r\n    const onRouterLinkClickHandler = (key) => {\r\n        if (callback) {\r\n            setIsOpen(false);\r\n            callback(key);\r\n        }\r\n    };\r\n\r\n    const onClickOutsideHandler = (evt) => {\r\n        if (isOpen && toggleContainer.current.contains(evt.target)) {\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    const onBlurHandler = () => {\r\n        timeOutId = setTimeout(() => {\r\n            setIsOpen(false);\r\n        }, 100);\r\n    };\r\n\r\n    const onKeyPress = (evt) => {\r\n        if (evt.keyCode === KEYCODES.ESC) {\r\n            evt.preventDefault();\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    const onFocusHandler = () => {\r\n        if (timeOutId) {\r\n            clearTimeout(timeOutId);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='dropdown mt-1 p-1' ref={toggleContainer} onBlur={onBlurHandler}\r\n             onFocus={onFocusHandler}>\r\n            <button className={css.togglerCss} type='button'\r\n                    id={ariaInfo}\r\n                    data-toggle='dropdown' aria-haspopup='true' aria-expanded='false' onClick={onClickHandler}>\r\n                {togglerText}\r\n            </button>\r\n            <div className={'dropdown-menu w-100' + dropOpenedClass} aria-labelledby={ariaInfo}>\r\n                {links.map((link, ind) =>\r\n                    (callback ?\r\n                        <ButtonDrop key={ind} link={link} css={css}\r\n                                    clickHandler={routerLink ? onRouterLinkClickHandler : onButtonClickHandler}/> :\r\n                        <LinkDrop key={ind} link={link} css={css}/>)\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropDown;\r\n","import {DATA_ROOT} from '../constants';\n\nexport const GIT_URLS = {\n    PHPTEST: {\n        name: 'Intensive-test',\n        reposUrl: DATA_ROOT + 'data/testRepos.json',\n        userUrl: DATA_ROOT + 'data/testUser.json',\n        title: 'Тестовые данные по интенсиву (из папки приложения)'\n    },\n    TEST: {\n        name: 'User-test',\n        reposUrl: DATA_ROOT + 'data/gitRepos.json',\n        userUrl: DATA_ROOT + 'data/gitUser.json',\n        title: 'Тестовые данные по пользователю github (из папки приложения).'\n    }\n    // NODETEST: {\n    //     name: 'Node-test',\n    //     reposUrl: '/data/nodeRepos.json',\n    //     userUrl: '/data/nodeUser.json',\n    //     title: 'Тестовые данные по интенсиву (из папки приложения).'\n    // },\n    // REACTTEST: {\n    //     name: 'React-test',\n    //     reposUrl: '/data/reactRepos.json',\n    //     userUrl: '/data/reactUser.json',\n    //     title: 'Тестовые данные по интенсиву (из папки приложения).'\n    // }\n};\nexport const CHART_COLORS = [\n    'rgba(58, 226, 103, 0.2)',\n    'rgba(217, 217, 194, 0.2)',\n    'rgba(89, 105, 141, 0.2)',\n    'rgba(109, 138, 224, 0.2)',\n    'rgba(54, 162, 235, 0.2)',\n    'rgba(255, 99, 132, 0.2)',\n    'rgba(175, 38, 255, 0.2)',\n    'rgba(255, 206, 86, 0.2)',\n    'rgba(75, 192, 192, 0.2)',\n    'rgba(153, 102, 255, 0.2)',\n    'rgba(255, 159, 64, 0.2)'\n];\nexport const CHART_TYPES = {\n    BAR: 'bar',\n    PIE: 'pie',\n    DOUGHNUT: 'doughnut'\n};\nexport const GIT_TYPES = {\n    INTENSIVE: 'intensive',\n    USER: 'user'\n};\nexport const LIMIT = 50;\nexport const ACADEMY_PREFIX = 'htmlacademy-';\nexport const GIT_LINK_PARTS = {\n    LINK: 'https://api.github.com/users/',\n    PAGE: '/repos?page=',\n    LIMIT: '&per_page=' + LIMIT\n};\n\nexport const GIT_HOUR_LIMIT = 60;\n\nexport const CHART_CANVAS = {id: 'simpleChart', width: 270, height: 100};","import {ACADEMY_PREFIX, CHART_CANVAS, CHART_COLORS, GIT_TYPES} from './chartconstants';\n\nconst isDigit = (str) => (str.match(/[0-9]/));\n\nexport const getIsAcademy = (text) => (text.includes(ACADEMY_PREFIX));\n\nconst parseName = (name, isAcademy) => {\n    let [academyId, project, intensiveNumber] = ['?', '?', '?'];\n    if (isAcademy) {\n        const splitted = name.split('-');\n        switch (splitted.length) {\n            case 1: {\n                [academyId, project, intensiveNumber] = ['?', splitted[0], '?'];\n                break;\n            }\n            case 2: {\n                [academyId, project, intensiveNumber] = isDigit(splitted[0]) ? [splitted[0], splitted[1], '?'] : (\n                    isDigit(splitted[1]) ? ['?', splitted[0], splitted[1]] : ['?', splitted.join('-'), '?']\n                );\n                break;\n            }\n            default: {\n                const [first, ...rest] = splitted;\n                const middle = rest.slice(0, rest.length - 1);\n                const last = rest[rest.length - 1];\n                academyId = isDigit(first) ? first : '?';\n                intensiveNumber = isDigit(last) ? last : '?';\n                project = (academyId === '?' ? first + '-' : '') + middle.join('-') + (intensiveNumber === '?' ? '-' + last : '');\n            }\n        }\n    }\n    return ({\n        academyId,\n        project,\n        intensiveNumber\n    });\n};\n\nexport const parseRepoInfo = (repo) => {\n    const isAcademy = getIsAcademy(repo.html_url);\n    const parsedName = parseName(repo.name, isAcademy);\n    return ({\n        id: repo.id,\n        name: repo.name,\n        description: repo.description,\n        academyId: parsedName.academyId,\n        project: parsedName.project,\n        intensiveNumber: parsedName.intensiveNumber,\n        homepage: repo.homepage,\n        language: repo.language\n    });\n};\n\nexport const transformUserData = (data) =>\n    ({\n        id: data.id,\n        login: data.login,\n        type: data.login.toLowerCase().includes(ACADEMY_PREFIX) ? GIT_TYPES.INTENSIVE : GIT_TYPES.USER,\n        reposCount: data.public_repos,\n        profile: data.html_url\n    });\n\nexport const transformReposData = (data) =>\n    (data.map(item => parseRepoInfo(item)));\n\nexport const getTotals = (content, totalField = 'project') => {\n    const totals = {};\n    let fieldName = '?';\n    content.forEach((repo) => {\n        fieldName = repo[totalField] ? repo[totalField] : '?';\n        totals[fieldName] = totals[fieldName] ? totals[fieldName] + 1 : 1;\n    });\n    return totals;\n};\n\nconst getDark = (colors) => (colors.map(color =>\n        (color.substring(0, color.lastIndexOf(',')) + ', 1)'))\n);\n\nexport const transformToChartData = (sourceData, type, onLegendClick) => {\n    const labels = [...sourceData.labels];\n    return ({\n        type: type,\n        data: {\n            labels: labels,\n            datasets: [{\n                label: sourceData.label,\n                data: [...sourceData.data],\n                backgroundColor: CHART_COLORS,\n                borderColor: getDark(CHART_COLORS),\n                borderWidth: 1\n            }]\n        },\n        options: {\n            scales: {\n                yAxes: [{\n                    ticks: {beginAtZero: true}\n                }]\n            },\n            onClick: (evt, item) => {\n                if (item.length >= 0 && item[0]) {\n                    onLegendClick(labels[parseInt(item[0]['_index'], 10)]);\n                }\n            }\n        }\n    });\n};\n\nexport const getPreparedData = (totals) => {\n    const keys = Object.keys(totals);\n    const labels = keys;\n    const data = keys.map(item => totals[item]);\n    return ({\n        label: 'количество репозиториев',\n        data,\n        labels\n    });\n};\n\nexport const getTotalsField = (content) => (\n    (content.user && (content.user.type === GIT_TYPES.INTENSIVE)) ? 'project' : 'language'\n);\n\nexport const getDetailsFields = (content) => (\n    (content.user && content.repos) ?\n        ((content.user.type === GIT_TYPES.INTENSIVE) ? ['academyId', 'description'] : ['name']) :\n        null\n);\n\nexport const getDropDownData = (operations) => {\n    const keys = [...Object.keys(operations)];\n    return keys.map(key => ({\n        key: key,\n        text: operations[key],\n        link: key\n    }));\n};\n\nexport const getTotalDetails = (content) => {\n    const details = {};\n    let title = 'Нет данных';\n    if (content.user) {\n        const isAcademy = getIsAcademy(content.user.login);\n        const fieldName = isAcademy ? 'project' : 'language';\n        const uniqueIdCount = isAcademy ? content.repos.map(repo => repo.academyId).filter((v, i, a) => a.indexOf(v) === i).length : 0;\n        const aboutId = isAcademy ? `. Из них с неповторяющимися Id академии - ${uniqueIdCount}` : ``;\n        content.repos.forEach(repo => {\n            let key = repo[fieldName] ? repo[fieldName] : '?';\n            details[key] = details[key] ? details[key] + 1 : 1;\n        });\n        title = 'Всего репозиториев: ' + content.user.reposCount + aboutId + '. Разбивка по ' + (isAcademy ? 'проектам' : 'языкам') + ':';\n    }\n    return ({details, title, login: content.user ? content.user.login : ' ? '});\n};\n\n\nexport const createPDFDefinition = (totalDetails, canvasURL) => {\n    const ul = Object.keys(totalDetails.details).sort((b, a) => (parseInt(totalDetails.details[a]) - parseInt(totalDetails.details[b]))).map(key => [' ', key, totalDetails.details[key], ' ']);\n\n    const headerTitle = 'Данные по ' + totalDetails.login + ' (' + (new Date()).toLocaleString('ru') + ')';\n\n    const pdfContent = [\n        {text: headerTitle, margin: 20, fontSize: 20, alignment: 'center'},\n        {text: totalDetails.title, margin: 20, alignment: 'center'}\n    ];\n\n    if (canvasURL) {\n        pdfContent.push({\n            image: canvasURL,\n            width: CHART_CANVAS.width,\n            height: CHART_CANVAS.height,\n            alignment: 'center',\n            margin: 20\n        });\n    }\n\n    pdfContent.push({\n        layout: 'lightHorizontalLines',\n        table: {\n            widths: ['*', 'auto', 'auto', '*'],\n            body: ul\n        }\n    });\n\n    const docDefinition = {\n        pageSize: 'A4',\n        pageOrientation: 'portrait',\n        content: pdfContent,\n        header: () => ({\n            text: '',\n            fontSize: 20,\n            bold: true\n        }),\n\n        footer: (currentPage, pageCount) => {\n            return ({\n                text: currentPage.toString() + ' / ' + pageCount,\n                alignment: 'center'\n            });\n        }\n    };\n\n    return docDefinition;\n};","import React, {useRef, useEffect, useState} from 'react';\nimport {Chart} from 'chart.js';\n\nimport DropDown from '../../common/dropdown/DropDownHook';\nimport {getDropDownData, transformToChartData} from '../chartfunctions';\nimport {CHART_CANVAS, CHART_TYPES} from '../chartconstants';\n\nlet chart = null;\n\nconst SimpleChart = ({data = [], chartTitle, chartFooter, onLegendClick, hidden = false}) => {\n        const [chartType, setChartType] = useState(CHART_TYPES.BAR);\n        const canvas = useRef(null);\n        const chartData = transformToChartData(data, chartType, onLegendClick);\n\n        useEffect(() => {\n            drawChart();\n        });\n\n        const drawChart = () => {\n            const ctx = canvas.current.getContext('2d');\n            if (chart) {\n                chart.destroy();\n            }\n            chart = new Chart(ctx, Object.assign({}, chartData, {type: chartType}));\n        };\n\n        const onChartTypeChange = (type) => {\n            setChartType(type);\n            drawChart();\n        };\n\n        return (\n            <div className={hidden ? 'hidden' : ''}>\n                <h5 className='h5-responsive my-2'>{chartTitle}</h5>\n                <div className='d-flex mx-auto justify-content-center'>\n                    <DropDown data={getDropDownData(CHART_TYPES)} dropdownSet={CHART_TYPES}\n                              ariaInfo={'operation-dropdown'}\n                              togglerText={chartType} callback={onChartTypeChange}\n                              css={{\n                                  togglerCss: 'btn btn-light-green btn-sm dropdown-toggle',\n                                  linkCss: 'dropdown-item'\n                              }}/>\n                </div>\n                <canvas ref={canvas} id={CHART_CANVAS.id} width={CHART_CANVAS.width} height={CHART_CANVAS.height}></canvas>\n                <p className='my-2'>{chartFooter}</p>\n            </div>\n        );\n    }\n;\n\nexport default SimpleChart;","import React from 'react';\n\nconst getControl = (Control, callback, buttonType, colInd, rowInd) => (\n    <Control key={rowInd + ' ' + colInd} callback={callback} buttonType={buttonType} ind={rowInd}/>\n);\n\nexport const ArrayRowCells = ({element, controls = [], rowInd}) => (\n    <React.Fragment>\n        <td className='flex-grow-1'>{element}</td>\n        {controls.length > 0 ?\n            <td className='d-flex align-items-center justify-content-center flex-nowrap h-100'>\n                {controls.map((control, colInd) => getControl(control.Control, control.callback, control.buttonType, colInd, rowInd))}\n            </td> : null\n        }\n    </React.Fragment>\n);","import React, {useRef} from 'react';\nimport {useDrag, useDrop} from 'react-dnd';\n\nimport {ArrayRowCells} from './ArrayRowCells';\nimport {DND_TYPES} from '../../constants';\n\nexport const DraggableArrayRow = ({element, rowInd, controls = [], moveRow}) => {\n\n    const dragRef = useRef();\n\n    const [, drop] = useDrop({\n        accept: DND_TYPES.ROW,\n        hover(item, monitor) {\n            if (!dragRef.current) {\n                return;\n            }\n            item.rowInd = rowInd;\n        }\n    });\n\n    const [, drag] = useDrag({\n        item: {type: DND_TYPES.ROW, text: element.text, rowInd: rowInd},\n        end: monitor => {\n            if (moveRow && parseInt(rowInd, 10) >= 0 && parseInt(monitor.rowInd, 10) >= 0) {\n                moveRow(rowInd, monitor.rowInd);\n            }\n        }\n    });\n\n    drag(drop(dragRef));\n\n    return (\n        <tr className='d-flex align-items-center draggable' key={rowInd} ref={dragRef}\n               title='Для перемещения точки маршрута - drag-and-drop строки таблицы'>\n        <ArrayRowCells element={element} controls={controls} rowInd={rowInd}/>\n    </tr>);\n};","import {ArrayRowCells} from './ArrayRowCells';\nimport React from 'react';\n\nexport const SimpleArrayRow = ({controls, element, rowInd, moveRow = null}) => (\n    <tr className='d-flex align-items-center' key={rowInd}>\n        <ArrayRowCells element={element} controls={controls} rowInd={rowInd}/>\n    </tr>\n);","import React from 'react';\nimport {DraggableArrayRow} from './DraggableArrayRow';\nimport {SimpleArrayRow} from './SimpleArrayRow';\n\nexport const DetailsHeader = ({isArray}) => (isArray ?\n        <tr>\n            <th className='th-sm font-weight-bold mdb-color text-white'>Список</th>\n        </tr> :\n        <tr>\n            <th className='th-sm font-weight-bold mdb-color text-white'>Название поля</th>\n            <th className='th-sm font-weight-bold mdb-color text-white'>Значение</th>\n        </tr>\n);\n\nexport const ArrayRows = ({details, controls = [], draggableRows, moveRow}) => (\n    details.map((element, rowInd) => (\n        draggableRows ?\n            <DraggableArrayRow element={element} controls={controls} rowInd={rowInd} key={'row'+rowInd} moveRow={moveRow}/> :\n            <SimpleArrayRow  element={element} controls={controls} rowInd={rowInd} key={'row'+rowInd}/>\n    ))\n);\n\nexport const ObjectRows = ({details}) => {\n    const columns = Array.isArray(details) ? details : Object.keys(details);\n    return (\n        <React.Fragment>\n            {columns.map((element, ind) => (\n                <tr key={ind}>\n                    <td>{element}\n                    </td>\n                    <td>{details[element]}</td>\n                </tr>\n            ))}\n        </React.Fragment>);\n};\n\nconst SimpleTable = ({details, noHeader = false, controls = [], draggableRows = false, moveRow = null}) => (\n    <table className='table table-sm table-bordered w-100'>\n        <thead>\n        {noHeader ? null : <DetailsHeader isArray={Array.isArray(details)}/>}\n        </thead>\n        <tbody>\n        {Array.isArray(details) ?\n            <ArrayRows details={details} controls={controls} draggableRows={draggableRows} moveRow={moveRow}/> :\n            <ObjectRows details={details}/>}\n        </tbody>\n    </table>\n);\n\nexport default SimpleTable;\n\n","import React, {useEffect} from 'react';\nimport {KEYCODES} from '../../constants';\nimport SimpleTable from '../simpletable/SimpleTable';\n\n/**\n * @param details - Объект или массив строк\n * @param unsetDetails - Функция, изменяющая состояние модального окна с таблицей\n */\n\n\nconst getDefaultComponent = () =>  ({details, unsetDetails, title = 'Информация о выбранной записи:'}) => (\n    <React.Fragment>\n        <div className='mt-4 p-3 shadow-lg fixed-bottom h-100 bg-white'>\n            <button className='btn btn-sm btn-mdb-color' onClick={unsetDetails} type={'button'}\n                    title='Для возврата к предыдущему экрану - Еsc'>\n                выйти из просмотра (ESC)\n            </button>\n            <h5 className='text-center my-3'>{title}</h5>\n            <div className='overflow-auto h-100'>\n                <SimpleTable details={details}/>\n            </div>\n\n        </div>\n    </React.Fragment>\n);\n\nconst Details = (props) => {\n\n    const onKeyDown = (evt) => {\n        if (evt.keyCode === KEYCODES.ESC) {\n            evt.preventDefault();\n            props.unsetDetails();\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', onKeyDown);\n        return () => document.removeEventListener('keydown', onKeyDown);\n    });\n\n    const Component = ((typeof props['getRowClickComponent'] === 'undefined') ?\n        getDefaultComponent() : props['getRowClickComponent']());\n\n    return (props.details ?\n            <Component {...props}/>\n            : null\n    );\n};\n\nexport default Details;","import React, {useState} from 'react';\n\nconst GitUserForm = ({onGitUserClick}) => {\n    const [inputValue, setInputValue] = useState('');\n    return (\n        <div className='row justify-content-center align-items-center mx-auto p-3'>\n            <button className=\"col-12 col-md-6 btn btn-sm btn-outline-mdb-color mx-1\"\n                    onClick={() => onGitUserClick(inputValue.trim())}\n                    title='Получить данные по указанному пользователю GitHub'>\n                {'Построить график по: ' + inputValue}\n            </button>\n            <input className='col-12 col-md-5 form-control' value={inputValue} pattern='[A-Za-z0-9_-]'\n                   title='Пользователь GitHub для построения графика' placeholder='Github user'\n                   type='text' id='idGitUser' onChange={(evt) => setInputValue(evt.target.value)}/>\n        </div>\n    );\n};\n\nexport default GitUserForm;","import React, {useState} from 'react';\n\nimport Loader from '../common/loader/Loader';\nimport SimpleChart from './chart/SimpleChart';\nimport Details from '../common/details/Details';\nimport GitUserForm from './form/GitUserForm';\n\nimport {\n    getTotals,\n    getTotalsField,\n    transformUserData,\n    transformReposData,\n    getDetailsFields,\n    getPreparedData,\n    createPDFDefinition,\n    getTotalDetails\n} from './chartfunctions';\nimport {CHART_CANVAS, GIT_HOUR_LIMIT, GIT_LINK_PARTS, GIT_URLS, LIMIT} from './chartconstants';\n\n\nconst getPagesUrls = (tmpUser, url) => {\n    const isGitData = (typeof url === 'string');\n    let pages = [];\n    if (isGitData) {\n        const totalCount = tmpUser['reposCount'] ? tmpUser['reposCount'] : 0;\n        const totalPages = Math.ceil(totalCount / parseInt(LIMIT, 10)) || 1;\n\n        for (let i = 1; i <= totalPages; i++) {\n            let repoUrl = isGitData ?\n                url + GIT_LINK_PARTS.PAGE + (i) + GIT_LINK_PARTS.LIMIT :\n                url.reposUrl;\n            pages.push(repoUrl);\n        }\n    }\n    return isGitData ? pages : [url.reposUrl];\n};\n\nconst AppChart = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [content, setContent] = useState({user: null, repos: []});\n    const [wasError, setWasError] = useState(null);\n    const [currentDetails, setCurrentDetails] = useState(null);\n\n    const onError = (errorMessage) => {\n        setWasError(errorMessage);\n        setContent({user: null, repos: []});\n        setIsLoading(false);\n    };\n\n    const getData = (url = GIT_URLS.TEST, canceled = false) => {\n\n        setIsLoading(true);\n        setWasError(false);\n\n        fetch(typeof url === 'string' ? url : url.userUrl)\n            .then(response => response.json())\n            .then(userData => {\n                if (!canceled) {\n                    const tmpUser = transformUserData(userData);\n                    const pages = getPagesUrls(tmpUser, url);\n\n                    if (pages.length < GIT_HOUR_LIMIT) {\n                        Promise.all(pages.map(page => fetch(page)))\n                            .then(response => Promise.all(response.map(\n                                response => response.json()\n                            )))\n                            .then(results => {\n                                const jointData = [];\n                                results.forEach(result => jointData.push(...result));\n                                setContent({user: tmpUser, repos: transformReposData(jointData)});\n                                setIsLoading(false);\n                            }).catch(error => {\n                            if (!canceled) {\n                                onError('Произошла ошибка при получении данных о репозиториях');\n                            }\n                        });\n                    } else {\n                        onError('У github для неавторизованных пользователей ограничение на 60 запросов в час. Не стоит и пытаться выполнить запрос с таким количеством страниц.');\n                    }\n                }\n\n            })\n            .catch(error => {\n                if (!canceled) {\n                    onError('Произошла ошибка при получении данных пользователя');\n                }\n            });\n    };\n\n    const onLegendClick = (something) => {\n        const fields = getDetailsFields(content);\n        if (fields) {\n            const filterField = getTotalsField(content);\n            const details = content.repos.filter(\n                repo => ((repo[filterField] === something) || (something === '?' && !repo[filterField]))).map(\n                repo => fields.reduce((rv, field) => (rv + ' ' + repo[field]), ''));\n            setCurrentDetails({details: details, title: something});\n        }\n    };\n\n    const onTotalButtonClick = () => {\n        if (content.user) {\n            const {details, title} = getTotalDetails(content);\n            setCurrentDetails({details, title});\n        }\n    };\n\n    const onGitUserClick = (userName) => {\n        if (userName !== '' && userName.match(/[A-Za-z\\d_-]/)) {\n            getData(GIT_LINK_PARTS.LINK + userName);\n        } else {\n            setWasError('В имени пользователя допустимы только латинские символы, цифры, дефис и подчеркивание');\n        }\n    };\n\n    const makePdfOperation = (needOpen) => {\n        if (window.pdfMake) {\n            const canvas = document.getElementById(CHART_CANVAS.id);\n            const canvasURL = canvas ? canvas.toDataURL() : null;\n            const totalDetails = getTotalDetails(content);\n            const docDefinition = createPDFDefinition(totalDetails, canvasURL);\n\n            if (needOpen) {\n                window.pdfMake.createPdf(docDefinition).open();\n            } else {\n                window.pdfMake.createPdf(docDefinition).download();\n            }\n        }\n    };\n\n    const onPdfOpenClick = () => {\n        makePdfOperation(true);\n    };\n\n    const onPdfDownloadClick = () => {\n        makePdfOperation(false);\n    };\n\n\n    return (\n        <div>\n            <h4 className='h4-responsive'>AppChart</h4>\n            <div className=\"btn-group mt-2\" role=\"group\" aria-label=\"Получение данных\">\n                {Object.keys(GIT_URLS).map(item => (\n                    <button className=\"btn btn-sm btn-outline-mdb-color mx-1 cloudy-knoxville-gradient\" key={item}\n                            onClick={() => getData(GIT_URLS[item])}\n                            title={GIT_URLS[item].title}>\n                        {GIT_URLS[item].name}\n                    </button>\n                ))}\n            </div>\n            <GitUserForm onGitUserClick={onGitUserClick}/>\n\n            {isLoading ?\n                <Loader/> :\n                <React.Fragment>\n                    {wasError ?\n                        <p className='mt-2 text-danger d'><small>{wasError}</small></p> :\n                        currentDetails ?\n                            <Details details={currentDetails.details} title={currentDetails.title}\n                                     unsetDetails={() => setCurrentDetails(null)}/> :\n                            <React.Fragment>\n                                <SimpleChart\n                                    data={getPreparedData(getTotals(content.repos, getTotalsField(content)))}\n                                    chartTitle={'Диаграмма ' + (content.user ? content.user.login : '')}\n                                    chartFooter={content.user ? 'Всего публичных репозиториев: ' + content.user['reposCount'] : ''}\n                                    onLegendClick={onLegendClick}\n                                    hidden={!(content.user)}/>\n                                <button\n                                    className={'btn btn-sm btn-mdb-color ' + (content.user ? 'd-inline-block' : 'd-none')}\n                                    type='button'\n                                    onClick={onTotalButtonClick}>\n                                    Итоги в виде таблицы\n                                </button>\n                                <button\n                                    className={'btn btn-sm btn-mdb-color ' + (content.user ? 'd-inline-block' : 'd-none')}\n                                    type='button' title='Cформировать и открыть PDF c диаграммой и таблицей'\n                                    onClick={onPdfOpenClick}>\n                                    Открыть PDF\n                                </button>\n                                <button\n                                    className={'btn btn-sm btn-mdb-color ' + (content.user ? 'd-inline-block' : 'd-none')}\n                                    type='button' title='Cформировать и скачать PDF c диаграммой и таблицей'\n                                    onClick={onPdfDownloadClick}>\n                                    Скачать PDF\n                                </button>\n                            </React.Fragment>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nexport default AppChart;","import {DATA_ROOT} from '../../constants';\n\nexport const DATA_URLS = {\n    SMALL: {\n        name: '20 слов',\n        url: 'https://greycat20142017.github.io/pseudodb/rtasks20.json',\n        title: 'Данные из удаленного источника. Могут быть временно недоступны.'\n    },\n    BIG: {\n        name: '200 слов',\n        url: 'https://greycat20142017.github.io/pseudodb/rtasks200.json',\n        title: 'Данные из удаленного источника. Могут быть временно недоступны.'\n    },\n    TEST: {\n        name: 'тест', url: DATA_ROOT + 'data/test.json',\n        title: 'Тестовые данные из папки приложения.'\n    }\n};\n\nexport const SORT_DIRECTIONS = {\n    ASC: 'asc',\n    DESC: 'desc'\n};\n\nexport const PAGE_LIMIT = 10;","import React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nimport {PAGE_LIMIT, SORT_DIRECTIONS} from '../tableconstants';\n\nconst SortIndicator = ({currentColumn, sortField, sortDirection, onDirectionChange}) => {\n    const arrow = sortDirection === SORT_DIRECTIONS.ASC ?\n        <h5 className='font-weight-bold d-inline ml-2' aria-hidden='true' onClick={onDirectionChange}>&uarr;</h5> :\n        <h5 className='font-weight-bold d-inline ml-2' aria-hidden='true' onClick={onDirectionChange}>&darr;</h5>;\n    return (currentColumn === sortField) ? arrow : null;\n};\n\nconst TableRow = ({row, ind, columns, onRowClick, pseudoId = -1}) => (\n    <tr className='cursor-pointer' key={ind} title='Клик - для просмотра детальной информации'\n        onClick={() => onRowClick(row, pseudoId)}>{columns.map(column =>\n        <td key={column + ind}>{row[column]}</td>)}\n    </tr>\n);\n\nconst Table = ({data, onTableSort, ...rest}) => {\n    const columns = Array.isArray(data) && data.length > 0 ? Object.keys(data[0]) : [];\n    const noData = !(columns.length > 0 && data.length > 0);\n\n    const onPageChange = (paginationPage) => (rest.onPageChange(paginationPage.selected));\n\n    return (\n        noData ? <p className='text-mdb-color py-2'><small>Нет данных для вывода в таблицу</small></p> :\n            <React.Fragment>\n                <table className='table table-sm table-striped table-bordered my-3' cellSpacing='1' width='100%'\n                       id='idTable'>\n                    <thead>\n                    <tr>\n                        {columns.map(column =>\n                            <th className='th-sm font-weight-bold mdb-color text-white cursor-pointer'\n                                key={column + 'th'} onClick={() => onTableSort(column)}>\n                                {column}\n                                <SortIndicator currentColumn={column} {...rest}/>\n                            </th>)\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {data.map((row, ind) =>\n                        <TableRow key={ind} row={row} ind={ind} columns={columns} onRowClick={rest.onRowClick}\n                        pseudoId={row['id'] ? row.id : ind + rest.currentPage * PAGE_LIMIT}/>\n                    )}\n                    </tbody>\n                </table>\n\n                {noData || rest.pageCount < 2 ? null :\n                    <ReactPaginate\n                        previousLabel={<span>&lArr;</span>}\n                        nextLabel={<span>&rArr;</span>}\n                        breakLabel={<span className='gap'>...</span>}\n                        pageCount={rest.pageCount}\n                        onPageChange={onPageChange}\n                        forcePage={rest.currentPage}\n                        containerClassName={'pagination'}\n                        pageClassName={'page-item'}\n                        pageLinkClassName={'page-link'}\n                        previousLinkClassName={'page-link mdb-color-text'}\n                        nextLinkClassName={'page-link mdb-color-text'}\n                        disabledClassName={'disabled'}\n                        activeClassName={'active'}\n                    />\n                }\n            </React.Fragment>\n\n    );\n};\n\nexport default Table;","import React, {useState} from 'react';\nimport {KEYCODES} from '../../../constants';\n\nconst Filter = ({onFilterApply}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const onKeyPress = (evt) => {\n        if (evt.keyCode === KEYCODES.ENTER) {\n            evt.preventDefault();\n            onFilterApply(evt.target.value);\n        }\n    };\n\n    const clearFilter = () => {\n        if (inputValue !== '') {\n            setInputValue('');\n            onFilterApply('');\n        }\n    };\n\n    return (\n        <div className='md-form d-flex align-items-baseline mt-3 mb-2'>\n            <label htmlFor='idFilter'>{inputValue.trim() === '' ? 'Текст для поиска' : ''}</label>\n            <input className='form-control' value={inputValue}\n                   type='text' id='idFilter' onChange={(evt) => setInputValue(evt.target.value)}\n                   onKeyDown={onKeyPress}/>\n            <div className='btn-group' role='group' aria-label='группа кнопок'>\n                <button className={'btn btn-mdb-color btn-sm'} type='button' onClick={() => onFilterApply(inputValue)}\n                        title='выполнить поиск подстроки во всех полях таблицы'>\n                    поиск\n                </button>\n                <button className={'btn btn-mdb-color btn-sm ml-1'} type='button' onClick={clearFilter}\n                        title='сбросить выражение поиска'>\n                    &#10008;<span className='visually-hidden'>сбросить</span>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Filter;","import {chunk} from 'lodash';\n\nimport {PAGE_LIMIT} from './tableconstants';\n\nexport const containsPattern = (itemObject, pattern) => (\n    Object.keys(itemObject).reduce((rv, current) => (\n        rv || itemObject[current].toString().toLowerCase().includes(pattern.toLowerCase())), false\n    )\n);\n\nexport const getPreparedData = (content, sortField, sortDirection, filterValue) => (\n    chunk(content.filter(item => containsPattern(item, filterValue)), PAGE_LIMIT)\n);\n","import React, {useState} from 'react';\nimport {orderBy} from 'lodash';\n\nimport Table from './Table';\nimport Filter from '../filter/Filter';\nimport {SORT_DIRECTIONS} from '../tableconstants';\nimport Details from '../../details/Details';\n\nimport {getPreparedData} from '../tablefunctions';\n\n\nconst TableWrapper = (props) => {\n    const [filterValue, setFilterValue] = useState('');\n    const [currentPage, setCurrentPage] = useState(0);\n    const [sortField, setSortField] = useState(props.sortField || '');\n    const [sortDirection, setSortDirection] = useState(SORT_DIRECTIONS.ASC);\n    const [currentDetails, setCurrentDetails] = useState(null);\n    const preparedData = getPreparedData([...props.content], sortField, sortDirection, filterValue);\n\n\n    const onTableSort = (column) => (setSortField(column));\n\n    const onPageChange = (page) => (setCurrentPage(page));\n\n    const onRowClick = (rowData) => (setCurrentDetails(rowData));\n\n    const onDirectionChange = () => (\n        setSortDirection(sortDirection === SORT_DIRECTIONS.ASC ? SORT_DIRECTIONS.DESC : SORT_DIRECTIONS.ASC)\n    );\n\n    const onFilterApply = (value) => {\n        setFilterValue(value);\n        setCurrentPage(0);\n    };\n\n    return (\n        currentDetails ?\n            <Details\n                details={currentDetails}\n                unsetDetails={() => setCurrentDetails(null)}\n                getRowClickComponent={props['getRowClickComponent'] ? props.getRowClickComponent : undefined}\n            /> :\n            (preparedData.length > 0 ?\n                <React.Fragment>\n                    <Filter onFilterApply={onFilterApply}/>\n                    <Table\n                        data={preparedData.length > 0 ? orderBy([...preparedData[currentPage]], sortField, sortDirection) : []}\n                        currentPage={currentPage} onPageChange={onPageChange} pageCount={preparedData.length}\n                        sortField={sortField} sortDirection={sortDirection}\n                        onTableSort={onTableSort} onDirectionChange={onDirectionChange} onRowClick={onRowClick}/>\n                </React.Fragment> :\n                null)\n    );\n};\n\nexport default TableWrapper;","import {DATA_ROOT} from '../constants';\n\nexport const DATA_URLS = {\n    SMALL: {\n        name: '20 слов',\n        url: 'https://greycat20142017.github.io/pseudodb/rtasks20.json',\n        title: 'Данные из удаленного источника. Могут быть временно недоступны.'\n    },\n    BIG: {\n        name: '200 слов',\n        url: 'https://greycat20142017.github.io/pseudodb/rtasks200.json',\n        title: 'Данные из удаленного источника. Могут быть временно недоступны.'\n    },\n    TEST: {\n        name: 'тест', url: DATA_ROOT + 'data/test.json',\n        title: 'Тестовые данные из папки приложения.'\n    }\n};\n\n","import React, {useState} from 'react';\nimport {orderBy} from 'lodash';\n\nimport Loader from '../common/loader/Loader';\nimport TableWrapper from '../common/compoundtable/table/TableWrapper';\n\nimport {DATA_URLS} from './tableconstants';\nimport {SORT_DIRECTIONS} from '../common/compoundtable/tableconstants';\n\nconst defaultSortDirection = SORT_DIRECTIONS.ASC;\n\nconst AppTable = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [wasError, setWasError] = useState(false);\n    const [content, setContent] = useState([]);\n    const [sortField, setSortField] = useState('');\n\n    const stateReset = (data = [], loading = false, error = false, field = '') => {\n        setContent(data);\n        setIsLoading(false);\n        setSortField(sortField);\n        setWasError(error);\n    };\n\n    const getData = (url, canceled = false) => {\n        setIsLoading(true);\n        setWasError(false);\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                if (!canceled) {\n                    const defaultSortField = data.content.length > 0 && Object.keys(data.content[0]).length > 0 ?\n                        Object.keys(data.content[0])[0] : '';\n                    setContent(orderBy([...data.content], defaultSortField, defaultSortDirection));\n                    setWasError(false);\n                    setSortField(defaultSortField);\n                    stateReset(orderBy([...data.content], defaultSortField, defaultSortDirection), false, false, defaultSortField);\n                }\n            })\n            .catch(error => {\n                if (!canceled) {\n                    stateReset([], false, true, '');\n                }\n            });\n    };\n\n    return (\n        <div>\n            <h4 className='h4-responsive py-3 mdb-color-text'>Таблица с данными (AppTable)</h4>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Получение данных\">\n                {Object.keys(DATA_URLS).map(item => (\n                    <button className=\"btn btn-sm btn-outline-mdb-color\" key={item}\n                            onClick={() => getData(DATA_URLS[item].url)}\n                            title={DATA_URLS[item].title}>\n                        {DATA_URLS[item].name}\n                    </button>\n                ))}\n            </div>\n            {wasError ? <p className='p-2 text-danger'>Ошибка при загрузке данных.</p> : null}\n            {isLoading ?\n                <Loader/> :\n\n                <TableWrapper\n                    content={content}\n                    sortField={sortField}\n                />\n            }\n        </div>\n    );\n};\n\nexport default AppTable;","import {DEFAULT_POINT, DELIMITER, YANDEX_PLACEMARK_PRESETS} from './mapconstants';\nimport {MAP_TYPES} from '../constants';\n\nexport const getYmapsPoint = (point, ind) => {\n    return new window.ymaps.GeoObject(\n        {\n            geometry: {\n                type: 'Point',\n                coordinates: [...point.coords]\n            },\n            properties: {\n                iconContent: point.name,\n                hintContent: point.title\n            }\n        },\n        {\n            preset: ind === 0 ? YANDEX_PLACEMARK_PRESETS.START_POINT : YANDEX_PLACEMARK_PRESETS.COMMON_POINT,\n            draggable: true,\n            isMarker: true,\n            ind: ind\n        }\n    );\n};\n\nexport const getYMapsRoute = (points) => {\n    return new window.ymaps.GeoObject(\n        {\n            geometry: {\n                type: 'LineString',\n                coordinates: [...points.map(point => point.coords)]\n            },\n            properties: {\n                hintContent: 'Маршрут'\n            }\n        }, {\n            geodesic: true,\n            strokeWidth: 2,\n            strokeColor: 'blue'\n        }\n    );\n};\n\nexport const isPointInside = (name, limits) => {\n    return window.ymaps.geoQuery(window.ymaps.geocode(name)).searchInside(limits);\n};\n\nexport const getPlacemarkTitle = (coords, name = '') => (\n    Array.isArray(coords) ? name + ' - ' + coords.map(item => parseInt(item).toFixed(3)).join(DELIMITER) : name\n);\n\nexport const getCenterByMapType = (map, mapType) => {\n    if (map) {\n        switch (mapType) {\n            case MAP_TYPES.YANDEX: {\n                return map ? map.getCenter() : DEFAULT_POINT.coords;\n            }\n            case MAP_TYPES.GIS: {\n                const center = (map && map.mapa) ? map.mapa.getCenter() : null;\n                return center ? [center.lat, center.lng] : DEFAULT_POINT.coords;\n            }\n            default: {\n                return DEFAULT_POINT.coords;\n            }\n        }\n    }\n    return DEFAULT_POINT.coords;\n};\n\nexport const getHtmlIcon = (ind) => (\n    ind === 0 ?\n        `<div class='icon-2gis icon-2gis--first'><span>${ind + 1}</span></div>` :\n        `<div class='icon-2gis'><span>${ind + 1}</span></div>`\n);","import {getPlacemarkTitle} from './mapfunctions';\n\nexport const DELIMITER = ' : ';\nexport const POINT_TEXT = 'Точка ';\n\nexport const DEFAULT_POINT = {name: 'Центр по умолчанию', coords: [45.000, 40.000], title: getPlacemarkTitle([45.000, 40.000])};\n\nexport const DEFAULT_POINTS = [\n   {name: POINT_TEXT + '1', coords: [45.201, 41.951], title: getPlacemarkTitle([45.201, 41.951], POINT_TEXT + '1')},\n   {name: POINT_TEXT + '2', coords: [44.056, 43.044], title: getPlacemarkTitle([44.056, 43.044], POINT_TEXT + '2')}\n];\n\nexport const GEO_REG_EXP = /[0-9]{1-2}:[0-9]{1-3}/;\n\nexport const YANDEX_PLACEMARK_PRESETS = {\n  START_POINT: 'islands#redStretchyIcon',\n  COMMON_POINT: 'islands#blueStretchyIcon'\n};","import React, {useEffect} from 'react';\nimport {DEFAULT_POINT} from './mapconstants';\nimport {getYmapsPoint, getYMapsRoute} from './mapfunctions';\nimport Loader from '../common/loader/Loader';\n\nconst MapYandex = ({map, setMap, geoCollection, setGeoCollection, points, onChangeMarkerCoords}) => {\n\n    useEffect(() => {\n        const initMap = () => {\n            const mapa = new window.ymaps.Map('id-map-api', {\n                center: DEFAULT_POINT.coords,\n                zoom: 6\n            });\n            mapa.behaviors.disable('scrollZoom');\n            mapa.controls.remove('searchControl').remove('trafficControl').remove('geolocationControl').remove('typeSelector');\n            setMap(mapa);\n        };\n        if (!map && window.ymaps) {\n            window.ymaps.ready(initMap);\n        }\n    }, [map, setMap]);\n\n    useEffect(() => {\n        if (map && window.ymaps && !geoCollection) {\n            let geo = new window.ymaps.GeoObjectCollection({}, {\n                preset: 'islands#redCircleIcon',\n                strokeWidth: 4,\n                geodesic: true\n            });\n            map.geoObjects.add(geo);\n            setGeoCollection(geo);\n        }\n    }, [map, geoCollection, setGeoCollection]);\n\n\n    useEffect(() => {\n        const onMarkerDragEnd = (e) => {\n            const obj = e.get('target');\n            if (obj.options.get('isMarker')) {\n                const placemarkCoords = map.options.get('projection').fromGlobalPixels(\n                    map.converter.pageToGlobal(e.get('position')),\n                    map.getZoom()\n                );\n                onChangeMarkerCoords(obj.options.get('ind'), placemarkCoords);\n            }\n        };\n\n        const refreshMap = () => {\n            geoCollection.removeAll();\n            points.forEach((point, ind) => {\n                let marker = getYmapsPoint(point, ind);\n                geoCollection.add(marker);\n                marker.events.add('dragend', onMarkerDragEnd);\n            });\n            const polyline = getYMapsRoute(points);\n            geoCollection.add(polyline);\n        };\n        if (map && window.ymaps && geoCollection) {\n            refreshMap();\n        }\n    }, [points, geoCollection, map, onChangeMarkerCoords]);\n\n\n    return (\n        <div className='map map--api' id='id-map-api'>\n            <Loader message={'Загрузка карты...'}/>\n        </div>\n    );\n};\n\nexport default MapYandex;","import React, {useEffect} from 'react';\n\nimport {DEFAULT_POINT} from './mapconstants';\nimport {getHtmlIcon, getPlacemarkTitle} from './mapfunctions';\nimport Loader from '../common/loader/Loader';\n\nconst Map2Gis = ({map, setMap, geoCollection, setGeoCollection, points, onChangeMarkerCoords}) => {\n    useEffect(() => {\n        const initMap = () => {\n            window.DG.then(function () {\n                const mapa = window.DG.map('id-map-api', {\n                    'center': DEFAULT_POINT.coords,\n                    'zoom': 6,\n                    'scrollWheelZoom': false\n                });\n                setMap(mapa);\n            });\n        };\n        if (!map) {\n            initMap();\n        }\n    }, [map, setMap]);\n\n    useEffect(() => {\n            if (map && !geoCollection) {\n                const geoCollection = window.DG.featureGroup();\n                geoCollection.addTo(map);\n                setGeoCollection(geoCollection);\n            }\n        }, [map, geoCollection, setGeoCollection]\n    );\n\n\n    useEffect(() => {\n        const onMarkerDragEnd = (e) => {\n            const marker = e.target;\n            const lat = marker._latlng.lat.toFixed(3);\n            const lng = marker._latlng.lng.toFixed(3);\n            onChangeMarkerCoords(marker.options.alt, [lat, lng]);\n        };\n\n        const refreshMap = () => {\n            geoCollection.eachLayer(layer => {\n                layer.clearAllEventListeners();\n                geoCollection.removeLayer(layer);\n            });\n            setGeoCollection(geoCollection);\n            points.forEach((point, ind) => {\n                window.DG.marker([...point.coords], {\n                    draggable: true,\n                    title: getPlacemarkTitle(point.coords, point.name),\n                    alt: point.name,\n                    icon: window.DG.divIcon({html: getHtmlIcon(ind)})\n                }).on('dragend', onMarkerDragEnd).addTo(geoCollection);\n            });\n            window.DG.polyline(points.map(point => point.coords), {\n                color: '#59698d',\n                weight: 2,\n                opacity: 0.5\n            }).addTo(geoCollection);\n            geoCollection.addTo(map);\n        };\n        if (map && geoCollection) {\n            refreshMap();\n        }\n    }, [points, map, geoCollection, setGeoCollection, onChangeMarkerCoords]);\n\n\n    return (\n        <div className='map map--api' id='id-map-api'>\n            <Loader message={'Загрузка карты...'}/>\n        </div>\n    );\n};\n\n\nexport default Map2Gis;","import React, {useState} from 'react';\nimport {DndProvider} from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport SimpleTable from '../../common/simpletable/SimpleTable';\nimport {GEO_REG_EXP} from '../mapconstants';\nimport {CONTROL_BUTTON_TYPES, KEYCODES} from '../../constants';\nimport {getButtonTypeClass} from '../../functions';\n\nconst ControlButton = ({callback, buttonType, ind}) => (\n    <button className={'btn btn-sm m-0 py-1 px-2 mx-1 ' + getButtonTypeClass(buttonType)}\n            type='button' title={buttonType.title} onClick={() => callback(ind)}>\n        <span>{buttonType.icon}</span><span className='visually-hidden'>{buttonType.title}</span>\n    </button>\n);\n\nconst MapForm = ({routePoints, onAddPoint, onDeletePoint, onUp, onDown, moveRow}) => {\n    const [inputValue, setInputValue] = useState('');\n    const [wasInput, setWasInput] = useState(false);\n\n    const onEnterPress = (evt) => {\n        if (evt.keyCode === KEYCODES.ENTER) {\n            evt.preventDefault();\n            const pointData = evt.target.value;\n            const result = pointData;\n            if (inputValue.trim() !== '') {\n                setInputValue('');\n                setWasInput(false);\n                onAddPoint(result);\n            } else {\n                setWasInput(true);\n            }\n        }\n    };\n\n    return (\n        <div className='w-100'>\n            <input\n                className={'form-control ' + (inputValue.trim() === '' && !wasInput) ? 'is_valid' : 'is-invalid'}\n                value={inputValue} pattern={GEO_REG_EXP}\n                title='Название для новой точки маршрута. Enter - для завершения ввода.'\n                placeholder='... новая точка маршрута' required\n                type='text' id='idGitUser' onChange={(evt) => setInputValue(evt.target.value)}\n                onKeyDown={onEnterPress}/>\n\n                <DndProvider backend={HTML5Backend}>\n            <SimpleTable details={routePoints.map(item => item.name)} noHeader={true} draggableRows={true} moveRow={moveRow}\n                         controls={[\n                             {Control: ControlButton, buttonType: CONTROL_BUTTON_TYPES.DELETE, callback: onDeletePoint},\n                             {Control: ControlButton, buttonType: CONTROL_BUTTON_TYPES.UP, callback: onUp},\n                             {Control: ControlButton, buttonType: CONTROL_BUTTON_TYPES.DOWN, callback: onDown}\n                         ]}/>\n                </DndProvider>\n\n            <p><small>Новые точки маршрута добавляются в центр карты для последующего перемещения в нужную точку\n                карты.</small></p>\n            <p><small>Ибо геокодинг, кажется, только по ключу.</small></p>\n        </div>\n    );\n};\n\nexport default MapForm;","import React, {useState, useEffect} from 'react';\nimport update from 'immutability-helper';\n\nimport MapYandex from './MapYandex';\nimport Map2Gis from './Map2Gis';\n\nimport MapForm from './mapform/MapForm';\nimport {getCenterByMapType, getPlacemarkTitle} from './mapfunctions';\nimport {moveUp, moveDown} from '../functions';\nimport {DEFAULT_POINTS, DELIMITER} from './mapconstants';\nimport {KEYCODES, MAP_TYPES} from '../constants';\n\nconst AppMap = ({mapType, mapInit = null, geoInit = null}) => {\n    const [routePoints, setRoutePoints] = useState([...DEFAULT_POINTS]);\n    const [map, setMap] = useState(mapInit);\n    const [geoCollection, setGeoCollection] = useState(geoInit);\n    const [showSidebar, setShowSidebar] = useState(false);\n\n    const onKeyDown = (evt) => {\n        if (evt.keyCode === KEYCODES.ESC) {\n            evt.preventDefault();\n            setShowSidebar(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', onKeyDown);\n        return () => document.removeEventListener('keydown', onKeyDown);\n    });\n\n    const onDeletePoint = (delIndex) => (\n        setRoutePoints(routePoints.filter((item, index) => index !== delIndex))\n    );\n\n    const onUp = (ind) => (\n        setRoutePoints(moveUp(routePoints, ind))\n    );\n\n    const onDown = (ind) => (\n        setRoutePoints(moveDown(routePoints, ind))\n    );\n\n    const onChangeMarkerCoords = (index, newCoords) => (\n        setRoutePoints(routePoints.map((item, ind) => (index === ind) ?\n            Object.assign({}, item, {coords: [...newCoords], title: getPlacemarkTitle(newCoords)}) : item))\n    );\n\n    const on2GisMovePoint = (name, newCoords) => {\n        const point = routePoints.find((item) => item.name === name);\n        if (point) {\n            setRoutePoints(routePoints.map(item => (item.name === name) ? ({\n                name: name,\n                coords: newCoords,\n                title: newCoords.join(DELIMITER)\n            }) : item));\n        }\n    };\n\n    const onAddPoint = (name) => {\n        if (name) {\n            const newPointCoords = getCenterByMapType(map, mapType);\n            setRoutePoints([...routePoints, {\n                name: name,\n                coords: [...newPointCoords],\n                title: getPlacemarkTitle(newPointCoords, name)\n            }]);\n        }\n    };\n\n    const moveRow = (dragIndex, hoverIndex) => {\n        const draggedPoint = routePoints[dragIndex];\n        setRoutePoints(\n            update(routePoints, {\n                $splice: [[dragIndex, 1], [hoverIndex, 0, draggedPoint]],\n            }),\n        );\n    };\n\n    return (\n        <div className='row'>\n            <div\n                className={showSidebar ? 'd-block col-11 h-100 position-fixed fixed-center on-top' : 'd-none d-md-block col-4'}>\n                <MapForm routePoints={routePoints} onDeletePoint={onDeletePoint} onAddPoint={onAddPoint}\n                         onUp={onUp} onDown={onDown} moveRow={moveRow}/>\n                {showSidebar ?\n                    <button className='btn btn-mdb-color btn-sm' onClick={() => setShowSidebar(false)}>\n                        закрыть форму (Esc)\n                    </button> : null\n                }\n            </div>\n            <div>\n                <button className={showSidebar ? ' d-none' : 'btn btn-sm btn-mdb-color col-1 d-md-none'}\n                        onClick={() => setShowSidebar(true)} title='открыть форму редактирования маршрута'>\n                    &#10148;<span className='visually-hidden'>открыть форму редактирования маршрута</span>\n                </button>\n            </div>\n            <div className='col-10 col-md-8 border-light'>\n                {\n                    mapType === MAP_TYPES.YANDEX ?\n                        <MapYandex map={map} setMap={setMap} points={routePoints}\n                                   geoCollection={geoCollection} setGeoCollection={setGeoCollection}\n                                   onChangeMarkerCoords={onChangeMarkerCoords}/> :\n                        mapType === MAP_TYPES.GIS ?\n                            <Map2Gis map={map} setMap={setMap} points={routePoints}\n                                     geoCollection={geoCollection} setGeoCollection={setGeoCollection}\n                                     onChangeMarkerCoords={on2GisMovePoint}/> : null\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default AppMap;","import React from 'react';\nimport {getInlineSvg} from '../functions';\nimport {MDB_COLOR} from '../constants';\n\nconst AppMain = () => (\n    <React.Fragment>\n        <p className='mt-3'>Просто найденные на просторах интернета задания по React.</p>\n        {getInlineSvg('rtasks', 100, 100, MDB_COLOR, MDB_COLOR)}\n        <p>Без какой-либо общей идеи и реальной цели.</p>\n        <p>Исключительно для внесения разнообразия в учебные задачи.</p>\n    </React.Fragment>\n);\n\nexport default AppMain;","import {DATA_ROOT} from '../constants';\n\nexport const FIREBASE_URL_TYPE = {\n    FIREBASE_API: 'api',\n    FIREBASE_DB: 'db',\n    JSON: 'JSON'\n};\n\nexport const FIREBASE_URL = {\n    [FIREBASE_URL_TYPE.FIREBASE_API]: 'https://rtasks-cacd5.firebaseio.com/candy',\n    [FIREBASE_URL_TYPE.FIREBASE_DB]: '/candy',\n    [FIREBASE_URL_TYPE.JSON]:  DATA_ROOT + '/data/candy'\n};\n\nexport const FIELDS_LIST = [\n    {name: 'name', defaultValue: '-'},\n    {name: 'kind', defaultValue: '-'},\n    {name: 'amount', defaultValue: 0},\n    {name: 'price', defaultValue: 0},\n    {name: 'weight', defaultValue: 0}\n];\n\nexport const IMAGE_PATH = '/img/';\n\n\nexport const STARS_PATTERN = 'stars';\nexport const STARS = {\n    STAR: '\\u{2605}',\n    STAR_EMPTY: '\\u{2606}'\n};","import React from 'react';\nimport 'firebase/database';\nimport {IMAGE_PATH, STARS, STARS_PATTERN} from '../fireconstants';\nimport {getComposition, getField, getTextForm} from '../firebasefunctions';\n\nconst Stars = ({starsAmount, voiceAmount = null}) => {\n    const max = STARS_PATTERN.length;\n    const min = Math.max(Math.min(starsAmount, max), 0);\n    const stars = STARS_PATTERN.slice(0, min).split('');\n    const starsEmpty = starsAmount > 0 ? STARS_PATTERN.slice(0, max - min).split('') : STARS_PATTERN.split('');\n    return (\n        <p className='text-center p-0 m-0 my-1'\n           title={'Звезд: ' + starsAmount + (voiceAmount ? ', голосов: ' + voiceAmount : '')}>\n            {stars.map((star, ind) => <span key={ind} className='text-warning'>{STARS.STAR}</span>)}\n            {starsEmpty.map((star, ind) => <span key={'e-' + ind} className='text-warning'>{STARS.STAR_EMPTY}</span>)}\n        </p>\n    );\n};\n\nexport const Rating = ({rating}) => {\n    const starsAmount = parseInt(getField(rating, 'value'));\n    const voiceAmount = parseInt(getField(rating, 'number'));\n    return (\n        <div className='shadow-sm'>\n            <Stars starsAmount={starsAmount} voiceAmount={voiceAmount}/>\n            <p className='p-0 m-0 text-center'>{voiceAmount} {getTextForm(voiceAmount, ['голос', 'голоса', 'голосов'])}</p>\n        </div>\n    );\n};\n\nconst Composition = ({nutritionFacts}) => {\n    const composition = getComposition(nutritionFacts);\n    return (\n        <div className='p-2'>\n            <p>\n                <small>\n                    Состав: {getField(composition, 'contents')} {getField(composition, 'properties')}\n                </small>\n            </p>\n            <p className=''>Энергетическая ценность: {getField(composition, 'energy')}</p>\n        </div>\n    );\n};\n\nconst Image = ({details}) => (\n    <div className='p-2 mx-auto'>\n        <img className='img-thumbnail img-fluid' src={IMAGE_PATH + details.picture}\n             alt={'Фото: ' + details.name}\n             width='265'\n             height='264'/>\n    </div>\n);\n\nconst CardError = ({unsetDetails}) => (\n    <>\n        <header className='card-header' style={{minHeight: '110px'}}>\n            <span className='font-weight-bold mdb-color-text'>Не удалось получить данные о продукте</span>\n        </header>\n        <div className='card-footer'>\n            <button className='btn btn-sm btn-mdb-color' onClick={() => unsetDetails()}>Закрыть</button>\n        </div>\n    </>\n);\n\nexport const Card = ({details, unsetDetails, showComposition = true}) => (\n    <div className='pt-4 px-2'>\n        <article className='card mx-auto mdb-color-text' style={{maxWidth: '300px'}}>\n            {details ?\n                <>\n                    <header className='card-header' style={{minHeight: '110px'}}>\n                        <span className='font-weight-bold mdb-color-text'>{details.kind}</span>\n                        <h4 className='h4-responsive'>&laquo;{details.name}&raquo;</h4>\n                    </header>\n\n                    <div className='card-body position-relative'>\n                        <Image details={details}/>\n                        <span className='btn circle position-absolute btn-mdb-color text-white p-2'\n                              style={{top: '5px', right: '20px', borderRadius: '50%'}}>\n                            {details.weight || ''} г\n                        </span>\n                        <div className='card-group justify-content-between'>\n                            <span className='p-1'>Цена: {details.price}</span>\n                            <span className='p-1'>Количество: {details.amount}</span>\n                        </div>\n                        {details.rating ? <Rating rating={details.rating}/> : null}\n                        {details.nutritionFacts && showComposition ?\n                            <Composition nutritionFacts={details.nutritionFacts}/> : null}\n                        <div className='card-footer'>\n                            <button className='btn btn-sm btn-mdb-color' onClick={() => unsetDetails()}>Закрыть</button>\n                        </div>\n                    </div>\n                </> :\n                <CardError unsetDetails={unsetDetails}/>\n            }\n        </article>\n    </div>\n);\n\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {FIREBASE_URL, FIREBASE_URL_TYPE} from '../fireconstants';\nimport Loader from '../../common/loader/Loader';\nimport {Card} from './Card';\n\nexport const CardContainer = ({details, unsetDetails}) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [rowDetails, setRowDetails] = useState(null);\n\n    useEffect(() => {\n        const url = FIREBASE_URL[FIREBASE_URL_TYPE.FIREBASE_API];\n        const id = details.id;\n\n        setIsLoading(true);\n        axios.get(url + '/' + id + '.json', {timeout: 1000}).then(response => {\n            const data = response ? response.data : null;\n            setRowDetails(data);\n            setIsLoading(false);\n        }).catch(() => setIsLoading(false));\n\n    }, [details.id]);\n\n    return (\n        isLoading ? <Loader/> : <Card details={rowDetails} unsetDetails={unsetDetails}/>\n    );\n};","import React from 'react';\r\n\r\nconst SidenavSwitcher = ({isSidenavOpen, switchSidenav}) => (\r\n  <button className='btn btn-sm' title='Переключить боковую панель с фильтрами' onClick={switchSidenav}>\r\n    {isSidenavOpen ? <span>&#10008;</span> : <span>&#9776;</span>}\r\n  </button>\r\n);\r\n\r\nexport default SidenavSwitcher;\r\n\r\n","import React, {useRef} from 'react';\n\nconst Darken = ({switchMethod = null, ...props}) => {\n    const noToggleContainer = useRef(null);\n    // constructor(props) {\n    //   super(props);\n    //   noToggleContainer = React.createRef();\n    // }\n\n    const onClickHandler = (evt) => {\n        const ok = switchMethod && props[switchMethod];\n        if (!noToggleContainer.current.contains(evt.target) && ok) {\n            props[switchMethod]();\n        }\n    };\n\n    return (\n        <div className={props.isOpen ? 'd-flex' : 'd-none'}\n             style={props.isOpen ? {\n                 backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                 position: 'fixed',\n                 left: 0,\n                 top: 0,\n                 right: 0,\n                 bottom: 0,\n                 zIndex: 100\n             } : {}} onClick={onClickHandler}>\n            <div ref={noToggleContainer}>\n                {props.children}\n            </div>\n        </div>\n    );\n\n\n}\n\nexport default Darken;\n","import React from 'react';\n\nimport {getInlineSvg} from '../../../functions';\nimport {MDB_COLOR} from '../../../constants';\n\nexport const RUSSIAN_TITLES = {\n    'gluten': 'С глютеном',\n    'sugar': 'С сахаром',\n    'vegetarian': 'Вегетарианские'\n};\n\nexport const Kinds = ({kinds, onCheckBoxClick, selectAll, unSelectAll, title = 'По виду:'}) => {\n    return (\n        kinds ?\n            <>\n                <hr/>\n                <label className='font-weight-bold text-center'>{title}</label>\n                <div className='p-2 text-left'>\n                    {Object.keys(kinds).map(kind =>\n                        <div className='custom-control custom-checkbox' key={kind}>\n                            <input type='checkbox' className='custom-control-input' id={'check' + kind}\n                                   checked={kinds[kind]}\n                                   value={kinds[kind]}\n                                   onChange={() => onCheckBoxClick(kind)}/>\n                            <label className='custom-control-label'\n                                   htmlFor={'check' + kind}>{RUSSIAN_TITLES[kind] || kind}</label>\n                        </div>\n                    )}\n                </div>\n                <div className='button-group'>\n                    <button className='btn p-1'\n                            title='выделить все' onClick={selectAll}>\n                        {getInlineSvg('select', 20, 20, MDB_COLOR, MDB_COLOR)}\n                    </button>\n                    <button className='btn p-1'\n                            title='снять выделение' onClick={unSelectAll}>\n                        {getInlineSvg('unselect', 20, 20, MDB_COLOR, MDB_COLOR)}\n                    </button>\n                </div>\n            </> : null\n    );\n};\n\nexport const TextForm = ({text, setText}) => (\n    <>\n        <hr/>\n        <div className='px-1'>\n            <label className='font-weight-bold' htmlFor='text'\n                   title='В т.ч. по цене, количеству и части названия и вида'>По тексту:</label>\n            <p className='d-flex'>\n                <input className='w-responsive' type='text' id='text' value={text}\n                       onChange={(evt) => setText(evt.target.value)}/>\n                <button className='btn btn-sm px-2' disabled={text.length === 0} title='Очистить текст'\n                        aria-label={'Очистить текст'}\n                        onClick={() => setText('')}>&#10008;</button>\n            </p>\n        </div>\n        <hr/>\n    </>\n);\n\nexport const FilterButtons = ({apply, reset, cancel}) => (\n    <div className='button-group'>\n        <button className='btn btn-sm btn-mdb-color'\n                title='Применить фильтр'\n                onClick={apply}>\n            применить фильтр\n        </button>\n        <button className='btn btn-sm btn-mdb-color'\n                title='Сбросить текущий фильтр и применить фильтр по умолчанию' onClick={reset}>\n            сбросить фильтр\n        </button>\n        <button className='btn btn-sm btn-mdb-color'\n                title='Закрыть панель фильтра без изменений' onClick={cancel}>\n            закрыть\n        </button>\n    </div>\n);","import React, {useEffect, useState} from 'react';\nimport {FilterButtons, Kinds, TextForm} from './CatalogFilterComponents';\n\nconst CatalogFilter = ({filterData, applyFilter, cancel}) => {\n    const [kinds, setKinds] = useState(null);\n    const [facts, setFacts] = useState(null);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        setKinds(filterData.kinds);\n        setFacts(filterData.facts);\n    }, [filterData, setKinds, setFacts]);\n\n    const onKindClick = (kind) => {\n        setKinds(Object.assign({}, kinds, {[kind]: !kinds[kind]}));\n    };\n\n    const onFactClick = (fact) => {\n        setFacts(Object.assign({}, facts, {[fact]: !facts[fact]}));\n    };\n\n    const changeSelected = (obj, setObj, selected) => {\n        const newObj = {};\n        Object.keys(obj).forEach(item => newObj[item] = selected);\n        setObj(Object.assign({}, obj, newObj));\n    };\n\n    const reset = () => {\n        const newKinds = {};\n        const newFacts = {};\n        Object.keys(kinds).forEach(kind => (newKinds[kind] = true));\n        Object.keys(facts).forEach(fact => (newFacts[fact] = false));\n        applyFilter({kinds: newKinds, text: '', facts: newFacts});\n    };\n\n    const apply = () => {\n        applyFilter({kinds: {...kinds}, text: text, facts: {...facts}});\n    };\n\n    return (\n        <div className='p-1 mx-auto'>\n            <h5 className='h5-responsive'>Фильтр</h5>\n                <Kinds kinds={kinds} onCheckBoxClick={onKindClick}\n                       selectAll={() => changeSelected(kinds, setKinds, true)}\n                       unSelectAll={() => changeSelected(kinds, setKinds, false)}/>\n                <Kinds kinds={facts} onCheckBoxClick={onFactClick} title={'Только:'}\n                       selectAll={() => changeSelected(facts, setFacts, true)}\n                       unSelectAll={() => changeSelected(facts, setFacts, false)}/>\n                <TextForm text={text} setText={setText}/>\n                <FilterButtons apply={apply} reset={reset} cancel={cancel}/>\n        </div>\n    );\n};\n\nexport default CatalogFilter;","import React from 'react';\r\n\r\nimport Darken from './Darken';\r\nimport CatalogFilter from '../catalogfilter/CatalogFilter';\r\n\r\nconst Sidenav = (props) => {\r\n\r\n    return (\r\n        <Darken {...props} switchMethod='switchSidenav'>\r\n            <nav className={'shadow bg-white p-3'} style={{width: '270px', height: '100%', zIndex: 101}}>\r\n                {props.filterData ?\r\n                    <CatalogFilter filterData={props.filterData} applyFilter={props.applyFilter}\r\n                                   cancel={props.cancel}/> :\r\n                    null}\r\n            </nav>\r\n        </Darken>\r\n    );\r\n};\r\n\r\nexport default Sidenav;\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\n\nimport {Card} from './Card';\nimport {KEYCODES} from '../../constants';\n\nimport SidenavSwitcher from './sidenav/SidenavSwitcher';\nimport Sidenav from './sidenav/Sidenav';\nimport {containsPattern} from '../../common/compoundtable/tablefunctions';\nimport {RUSSIAN_TITLES} from './catalogfilter/CatalogFilterComponents';\n\nconst FILTER_OPTION_TYPES = {kinds: 'kinds', facts: 'facts'};\n\nexport const containsPatternWithin = (itemObject, pattern) => (\n    Object.keys(itemObject).reduce((rv, current) => (\n        rv ||\n        (typeof itemObject[current] === 'object' ? containsPattern(itemObject[current], pattern) :\n            itemObject[current].toString().toLowerCase().includes(pattern.toLowerCase()))), false\n    )\n);\n\nconst getFilterOptions = (filterData, optionType) => (filterData[optionType] ?\n    Object.keys(filterData[optionType]).filter(option => filterData[optionType][option]) : []);\n\nconst getSubHeader = (filterData) => {\n    let text = 'Условия отбора: ';\n    if (filterData) {\n        const kinds = getFilterOptions(filterData, FILTER_OPTION_TYPES.kinds);\n        const facts = getFilterOptions(filterData, FILTER_OPTION_TYPES.facts);\n        text += kinds.length > 0 ? ' ' + kinds.join(', ') + '. ' : '';\n        text += facts.length > 0 ? 'Только ' + facts.map(fact => RUSSIAN_TITLES[fact].toString().toLowerCase() || fact).join(', ') + '. ' : '';\n        text += filterData.text ? 'Содержащие подстроку \"' + filterData.text + '\".' : '';\n    }\n    return text;\n};\n\nconst getFilteredCatalog = (catalog, filterData) => {\n    let filteredCatalog = [...catalog];\n    if (filterData) {\n        const kinds = getFilterOptions(filterData, FILTER_OPTION_TYPES.kinds);\n        const facts = getFilterOptions(filterData, FILTER_OPTION_TYPES.facts);\n        filteredCatalog = filteredCatalog.filter(elem => kinds.indexOf(elem.kind) >= 0);\n        facts.forEach(prop => {\n            filteredCatalog = filteredCatalog.filter(elem => (elem.nutritionFacts[prop] && true));\n        });\n        filteredCatalog = filterData.text ? filteredCatalog.filter(item => containsPatternWithin(item, filterData.text)) : filteredCatalog;\n    }\n    return filteredCatalog;\n};\n\nexport const Catalog = ({catalog, closeCatalog}) => {\n\n    const [isSidenavOpen, setIsSidenavOpen] = useState(false);\n    const [filterData, setFilterData] = useState(null);\n    const [filteredData, setFilteredData] = useState([...catalog]);\n\n    useEffect(() => {\n        const onKeyDown = (evt) => {\n            if (evt.keyCode === KEYCODES.ESC) {\n                evt.preventDefault();\n                closeCatalog();\n            }\n        };\n        document.addEventListener('keydown', onKeyDown);\n        return () => document.removeEventListener('keydown', onKeyDown);\n    }, [closeCatalog]);\n\n    useEffect(() => {\n        const kinds = {};\n        const prices = {min: 0, max: 0};\n        catalog.forEach(item => {\n            kinds[item.kind] = true;\n            prices.max = Math.max(parseInt(item['price']), prices.max);\n        });\n        setFilterData({\n            kinds, prices, text: '',\n            facts: {'sugar': false, 'gluten': false, 'vegetarian': false}\n        });\n    }, [catalog, setFilterData]);\n\n    const switchSidenav = () => setIsSidenavOpen(!isSidenavOpen);\n\n    const applyFilter = (newFilterData) => {\n        setIsSidenavOpen(false);\n        setFilterData(Object.assign({}, filterData, newFilterData));\n        setFilteredData(getFilteredCatalog(catalog, newFilterData));\n    };\n\n    const cancel = () => (setIsSidenavOpen(false));\n\n    return (\n        <div className='mt-4 p-3 shadow-lg fixed-bottom h-100 w-100 bg-white text-center d-flex flex-column'>\n            <div className='col-sm-12 col-md-10 mx-auto h-100 '>\n                <h5 className='h5-responsive pb-2'>Каталог продуктов (по мотивам Candyshop)</h5>\n                <p className='mdb-color-text'><small>{getSubHeader(filterData)}</small></p>\n                <div className='d-flex justify-content-between'>\n                    <SidenavSwitcher isSidenavOpen={isSidenavOpen} switchSidenav={switchSidenav}/>\n                    <p className='text-warning'><small>Народ жаждет Кэндишопа!</small><span\n                        className='font-weight-bold'>&#9786;</span></p>\n                </div>\n                <div\n                    className='shadow-sm w-100 h-100 d-flex flex-wrap justify-content-center shadow-sm w-100 h-100  overflow-auto'>\n\n                    <Sidenav isOpen={isSidenavOpen} switchSidenav={switchSidenav} filterData={filterData}\n                             applyFilter={applyFilter} cancel={cancel}/>\n\n                    {filteredData && filteredData.length > 0 ?\n                        filteredData.map((row, ind) =>\n                            <Card key={ind} details={row} unsetDetails={closeCatalog} showComposition={false}/>\n                        ) :\n                        <p>Нет данных по выбранным критериям. Нужно проверить условия в фильтре.</p>\n                    }\n\n                </div>\n            </div>\n\n        </div>\n    );\n};","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {orderBy} from 'lodash';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport Loader from '../common/loader/Loader';\nimport TableWrapper from '../common/compoundtable/table/TableWrapper';\nimport {SORT_DIRECTIONS} from '../common/compoundtable/tableconstants';\nimport {FIELDS_LIST, FIREBASE_URL, FIREBASE_URL_TYPE} from './fireconstants';\nimport {getDataWithId, getRowMapResult} from './firebasefunctions';\nimport {CardContainer} from './candy/CardContainer';\n\nimport {Catalog} from './candy/Catalog';\n\nconst defaultSortDirection = SORT_DIRECTIONS.ASC;\n\nconst getRowClickComponent = () => (props) => {\n    return (\n        <CardContainer {...props}/>\n    );\n};\n\nconst CurrentComponent = ({showCatalog, content, sortField, getRowClickComponent, catalog, closeCatalog}) => (\n    showCatalog ?\n        <Catalog catalog={catalog} closeCatalog={closeCatalog}/> :\n        <TableWrapper\n            content={content}\n            sortField={sortField}\n            getRowClickComponent={getRowClickComponent}\n        />\n\n);\n\nconst AppFirebase = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [content, setContent] = useState([]);\n    const [wasError, setWasError] = useState(null);\n    const [sortField, setSortField] = useState('');\n    const [catalog, setCatalog] = useState([]);\n    const [showCatalog, setShowCatalog] = useState(false);\n\n\n    const getData = async (url, url_type) => {\n        let data = [];\n        setIsLoading(true);\n        setWasError(null);\n        try {\n            if (url_type === FIREBASE_URL_TYPE.FIREBASE_DB) {\n                if (firebase.database().ref('.info/connected')) {\n                    const response = await firebase.database().ref(url).once('value');\n                    data = response ? response.val().map(row => getRowMapResult(row, FIELDS_LIST)) : [];\n                    setCatalog(response.val());\n                } else {\n                    setIsLoading(false);\n                    setWasError('База Firebase недоступна');\n                }\n            } else {\n                const response = await axios.get(url + '.json', {timeout: 1000});\n                data = response ? response.data.map(row => getRowMapResult(row, FIELDS_LIST)) : [];\n                setCatalog(response.data);\n            }\n            const defaultSortField = data.length > 0 && Object.keys(data[0]).length > 0 ?\n                Object.keys(data[0])[0] : '';\n            setContent(data ? orderBy(getDataWithId(data), defaultSortField, defaultSortDirection) : []);\n            setSortField(defaultSortField);\n            setIsLoading(false);\n            setWasError(false);\n        } catch (err) {\n            setWasError(err.message);\n            setIsLoading(false);\n        }\n    };\n\n    const getAPIData = () => (getData(FIREBASE_URL[FIREBASE_URL_TYPE.FIREBASE_API], FIREBASE_URL_TYPE.FIREBASE_API));\n\n    const getDBData = () => {\n        if (window.navigator.onLine) {\n            getData(FIREBASE_URL[FIREBASE_URL_TYPE.FIREBASE_DB], FIREBASE_URL_TYPE.FIREBASE_DB);\n        } else {\n            setWasError('Offline!');\n        }\n    };\n\n    const getJSONData = () => (getData(FIREBASE_URL[FIREBASE_URL_TYPE.JSON], FIREBASE_URL_TYPE.JSON));\n\n\n    return (\n        <React.Fragment>\n            {isLoading ? <Loader message={'Ожидание ответа сервера...'}/> :\n                <div>\n                    <h4 className='h4-responsive py-2 mdb-color-text'>Данные (AppFirebase)</h4>\n                    <p className='text-danger'>{wasError}</p>\n                    <div className='btn-group pb-2' role='group' aria-label='Firebase'>\n                        <button className='btn btn-sm btn-outline-mdb-color'\n                                onClick={getAPIData}\n                                title='Получение тестовых данных (API)'>\n                            получить данные (API)\n                        </button>\n                        <button className='btn btn-sm btn-outline-mdb-color'\n                                onClick={getDBData}\n                                title='Получение тестовых данных (RealtimeDatabase)'>\n                            получить данные\n                        </button>\n                        <button className='btn btn-sm btn-outline-mdb-color'\n                                onClick={getJSONData}\n                                title='Получение тестовых данных (локальный JSON)'>\n                            получить данные (JSON)\n                        </button>\n                        {content.length > 0 ?\n                            <button className='btn btn-sm btn-light-green ml-1'\n                                    onClick={() => setShowCatalog(!showCatalog)}\n                                    title='Каталог'>\n                                каталог\n                            </button> : null\n                        }\n                    </div>\n                    {content.length > 0 ?\n                        <CurrentComponent content={content} sortField={sortField}\n                                          getRowClickComponent={getRowClickComponent}\n                                          showCatalog={showCatalog} catalog={catalog}\n                                          closeCatalog={() => setShowCatalog(false)}/>\n                        :\n                        <p>Нет данных</p>\n                    }\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nexport default AppFirebase;","import React, {useContext, useState} from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport UserContext from '../UserContext';\nimport Loader from '../../common/loader/Loader';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [wasError, setWasError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n    const {authUser} = useContext(UserContext);\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        if (email.trim() !== '' && password.trim() !== '') {\n            login({email, password});\n        } else {\n            setWasError('Необходимо заполнить e-mail и пароль');\n        }\n    };\n\n    const login = (regData) => {\n        setIsLoading(true);\n        setWasError(null);\n        firebase.auth().signInWithEmailAndPassword(regData.email, regData.password).then(() => {\n            setIsLoading(false);\n        }).catch(error => {\n            setWasError(error.message);\n            setIsLoading(false);\n        });\n    };\n\n    return (\n        <section className=\"col-12 col-md-6 py-3 justify-content-center container\">\n            <h3 className='text-center mb-2'>Вход</h3>\n            {authUser ?\n                <h5 className='text-center mb-2'>выполнен под пользователем {authUser.displayName}</h5> :\n                <form className='needs-validation mx-auto p-3 white mdb-color-text rounded shadow-lg text-center'\n                      onSubmit={onSubmit}>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='email'>E-mail</label>\n                        <input className='form-control' autoComplete=\"off\"\n                               type='email' name='email' placeholder='E-mail' id='email' required\n                               value={email} onChange={(evt) => setEmail(evt.target.value)}/>\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='password'>Пароль</label>\n                        <input className='form-control' autoComplete=\"off\"\n                               type='password' name='password' placeholder='Пароль' required\n                               value={password} onChange={(evt) => setPassword(evt.target.value)}/>\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='py-3'>\n                        <button className='btn btn-sm btn-mdb-color' type='submit' onClick={onSubmit}\n                                onSubmit={onSubmit}>Войти\n                        </button>\n                    </div>\n                </form>\n            }\n            {isLoading ?\n                <Loader message={'Ожидание ответа сервера...'}/> : null\n            }\n            <p className='mt-3 text-danger'>{wasError}</p>\n\n        </section>\n    );\n};\n\nexport default Login;\n","import React, {useState, useEffect} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// import UserContext from '../UserContext';\nimport Loader from '../../common/loader/Loader';\n\nconst Logout = () => {\n    const [wasError, setWasError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n\n    useEffect(()=> {\n        const logout = () => {\n            setIsLoading(true);\n            setWasError(null);\n\n            firebase.auth().signOut().then(() => {\n                // setUser(null);\n                setIsLoading(false);\n            }).catch(error => {\n                setWasError(error.message);\n                setIsLoading(false);\n            });\n        };\n        logout();\n    }, []);\n\n\n    return (\n        isLoading ?\n            <Loader message={'Ожидание ответа сервера...'}/> :\n            <p className='mt-3 text-danger'>{wasError}</p>\n    );\n};\n\nexport default Logout;\n","import React, {useState} from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Loader from '../../common/loader/Loader';\n\nconst Register = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [wasError, setWasError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n\n    const updateCurrentProfile = (displayName) => {\n        setIsLoading(true);\n        setWasError(null);\n        const user = firebase.auth().currentUser;\n        if (user) {\n            user.updateProfile({\n                displayName: displayName\n            }).then(() => {\n                // Update successful.\n                setWasError('Зарегистрирован пользователь' + displayName);\n                setIsLoading(false);\n            }).catch((error) => {\n                setWasError(error.message);\n                setIsLoading(false);\n            });\n        }\n    };\n\n    const register = async (regData) => {\n        setIsLoading(true);\n        setWasError(null);\n        try {\n            const user = await firebase.auth().createUserWithEmailAndPassword(regData.email, regData.password);\n            setWasError('Зарегистрирован: ' + user.user.uid);\n            setIsLoading(false);\n            updateCurrentProfile(regData.displayName);\n        } catch (err) {\n            setWasError(err.message);\n            setIsLoading(false);\n        }\n    };\n\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        if (email.trim() !== '' && password.trim() !== '') {\n            register({email, password, displayName: name});\n        } else {\n            setWasError('Необходимо заполнить e-mail, пароль и имя');\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <section className='col-12 col-md-6 py-3 justify-content-center container'>\n                <h2 className='text-center'>Регистрация</h2>\n                <form\n                    className='needs-validation mx-auto col-11 p-3 white mdb-color-text rounded shadow-lg text-center'\n                >\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='name'>Имя</label>\n                        <input className='form-control'\n                               type='text' name='name' placeholder='Имя' id='name' required\n                               value={name} onChange={(evt) => setName(evt.target.value)}/>\n\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='email'>E-mail</label>\n                        <input className='form-control'\n                               type='email' name='email' placeholder='E-mail' id='email' required\n                               value={email} onChange={(evt) => setEmail(evt.target.value)}/>\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <div className='col-12 d-flex flex-column mt-2'>\n                        <label className='text-left' htmlFor='password'>Пароль</label>\n                        <input className='form-control'\n                               type='password' name='password' placeholder='Пароль' id='password' required\n                               value={password} onChange={(evt) => setPassword(evt.target.value)}/>\n\n                        <span className='invalid-feedback'></span>\n                    </div>\n                    <button className='btn btn-mdb-color btn-sm' type='submit' onClick={onSubmit}\n                            onSubmit={onSubmit}>\n                        Зарегистрироваться\n                    </button>\n                </form>\n                {isLoading ?\n                    <Loader message={'Ожидание ответа сервера...'}/> :\n                    <p className='mt-3 text-danger'>{wasError}</p>\n                }\n\n            </section>\n        </React.Fragment>\n    );\n};\n\nexport default Register;\n","import React, {useContext} from 'react';\n\nimport UserContext from '../UserContext';\nimport SimpleTable from '../../common/simpletable/SimpleTable';\n\nconst Profile = () => {\n    const {authUser} = useContext(UserContext);\n    return (\n        <React.Fragment>\n            <h4>Профиль пользователя</h4>\n            {authUser ?\n                <SimpleTable details={authUser}/> :\n                <p>Просмотр профиля возможен только для залогиненного пользователя</p>\n            }\n        </React.Fragment>\n    );\n};\n\nexport default Profile;","import React from 'react';\n\nconst Disabled = () => (<button className='btn btn-mdb-color btn-sm' disabled>временно отключено</button>);\n\nexport default Disabled;","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {wasError: false};\n    }\n\n    componentDidCatch() {\n        this.setState({wasError: true});\n    }\n\n    render() {\n        if (this.state.wasError) {\n            return (\n                <div className='alert alert-primary'>\n                    <h4>Произошла ошибка...</h4>\n                    <p>{this.props.message}</p>\n                </div>\n            );\n        } else {\n            return (this.props.children);\n        }\n    }\n\n    static defaultProps = {\n        message: 'Часть функциональности отключена. Возможная причина - недоступность карт.'\n    };\n}\n\nexport default ErrorBoundary;","import React from 'react';\n\nimport AppChart from './appchart/AppChart';\nimport AppTable from './apptable/AppTable';\nimport AppMap from './appmap/AppMap';\nimport AppMain from './appmain/AppMain';\nimport AppFirebase from './appfirebase/AppFirebase';\nimport Login from './appfirebase/login/Login';\nimport Logout from './appfirebase/logout/Logout';\nimport Register from './appfirebase/register/Register';\nimport Profile from './appfirebase/profile/Profile';\nimport Disabled from './common/Disabled';\nimport ErrorBoundary from './errorboundary/ErrorBoundary';\nimport {DISABLED_COMPONENTS, MAP_TYPES} from './constants';\n\nexport const routes = {\n    '/': () => <AppMain/>,\n    '/chart': () =>  <ErrorBoundary message={''}> <AppChart/> </ErrorBoundary>,\n    '/table': () => <AppTable/>,\n    '/mapyandex': () => (DISABLED_COMPONENTS.indexOf(MAP_TYPES.YANDEX) >= 0 ?\n        <Disabled/> :\n        <ErrorBoundary> <AppMap mapType={MAP_TYPES.YANDEX} mapInit={null} geoInit={null}/> </ErrorBoundary>),\n    '/map2gis': () => (DISABLED_COMPONENTS.indexOf(MAP_TYPES.GIS) >= 0 ?\n        <Disabled/> :\n        <ErrorBoundary> <AppMap mapType={MAP_TYPES.GIS} mapInit={null} geoInit={null}/> </ErrorBoundary>),\n    '/firebase': () => <ErrorBoundary message={'Что-то не то с Firebase получилось.'}><AppFirebase/></ErrorBoundary>,\n    '/login': () => <Login/>,\n    '/register': () => <Register/>,\n    '/profile': ()=> <Profile/>,\n    '/logout': ()=> <Logout/>\n};\n\n","import React from 'react';\nimport DropDown from './dropdown/DropDownHook';\nimport {navigate} from 'hookrouter';\nimport {getAuthUserProperty} from '../appfirebase/firebasefunctions';\n\nconst getUserMenuItems = (user) => {\n    const items = [\n        {key: '/register', link: '/register', text: 'Регистрация', hidden: !!(user)},\n        {key: '/login', link: '/login', text: 'Вход', hidden: !!(user)},\n        {key: '/profile', link: '/profile', text: 'Профиль', hidden: !(user)},\n        {key: '/logout', link: '/logout', text: 'Выход', hidden: !(user)}\n    ];\n    return items.filter(item => !item.hidden);\n};\n\n\nconst UserMenu = ({user}) => {\n    const data = getUserMenuItems(user);\n    const userMenuCallBack = (href) => navigate(href);\n\n    return (\n        <div className='d-flex justify-content-center'>\n            <DropDown data={data} togglerText={getAuthUserProperty(user)} callback={userMenuCallBack} routerLink={true}\n                      css={{\n                          togglerCss: 'btn dropdown-toggle btn-sm btn-mdb-color',\n                          linkCss: 'dropdown-item'\n                      }}/>\n        </div>\n    );\n};\n\nexport default UserMenu;","import React, {useContext} from 'react';\nimport {A, useRoutes} from 'hookrouter';\n\nimport UserContext from './appfirebase/UserContext';\n\nimport NotFound from './common/NotFound';\nimport {TASKS, TASKS_ORDER} from './constants';\nimport {routes} from './routes';\nimport {taskSearch, getAClassName} from './functions';\nimport UserMenu from './common/UserMenu';\n\nconst AppSwitcher = () => {\n    const routeResult = useRoutes(routes);\n    const task = taskSearch(window.location.pathname);\n    const {authUser} = useContext(UserContext);\n\n    return (\n        <React.Fragment>\n            <header>\n                <h3 className='h3-responsive text-center'>Разные задачи c использованием React</h3>\n                {TASKS_ORDER.map((item, ind) =>\n                    <A href={TASKS_ORDER[ind]['href']}\n                       className={getAClassName(TASKS_ORDER[ind].href)}\n                       key={ind}\n                       title={TASKS_ORDER[ind]['comment']}>{TASKS_ORDER[ind]['title']}\n                    </A>\n                )}\n                <UserMenu user={authUser}/>\n            </header>\n            <hr/>\n            <p><small>{TASKS[task]['comment']}</small></p>\n            <hr/>\n            {routeResult || <NotFound/>}\n        </React.Fragment>\n    );\n};\n\nexport default AppSwitcher;","import React, {useState, useEffect} from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport UserContext from './appfirebase/UserContext';\nimport {getUser} from './appfirebase/firebasefunctions';\nimport AppSwitcher from './AppSwitcher';\n\nimport {firebaseConfig} from './config';\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\nconst App = () => {\n    const [authUser, setUser] = useState(null);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((user) => setUser(getUser(user)));\n    }, []);\n\n    return (\n        <UserContext.Provider value={{authUser, setUser}}>\n            <div className=\"container py-3\">\n                <div className='col-12 col-md-10 mx-auto text-center'>\n                    <main>\n                        <AppSwitcher/>\n                    </main>\n                </div>\n            </div>\n        </UserContext.Provider>\n    );\n};\n\nexport default App;\n","export const firebaseConfig = ({\n    apiKey: \"AIzaSyAN5_Xz0XnBbhb_nPpIIPqwjfx6gkKgka8\",\n    authDomain: \"rtasks-cacd5.firebaseapp.com\",\n    databaseURL: \"https://rtasks-cacd5.firebaseio.com\",\n    projectId: \"rtasks-cacd5\",\n    storageBucket: \"\",\n    messagingSenderId: \"174032355886\",\n    appId: \"1:174032355886:web:8083a21142eed1dd4895bf\"\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport './mdbcss/bootstrap.min.css';\nimport './mdbcss/mdb.min.css';\nimport './index.css';\n\nimport {APP_ROOT} from './constants';\nimport {setBasepath} from 'hookrouter';\nsetBasepath(APP_ROOT);\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.0d9b647f.svg\";"],"sourceRoot":""}